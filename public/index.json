[{"content":"Instrukcja instalacji GitLab CE na Ubuntu/Debian Wprowadzenie Ten przewodnik przeprowadzi Cię przez proces instalacji GitLab Community Edition (CE) na serwerze Ubuntu/Debian. GitLab CE to darmowa, samodzielnie hostowana platforma do zarządzania kodem źródłowym i projektami.\nWymagania systemowe Przed rozpoczęciem instalacji upewnij się, że Twój serwer spełnia następujące wymagania:\nUbuntu 20.04 lub nowszy / Debian 10 lub nowszy Minimum 4 GB RAM (zalecane 8 GB) Minimum 10 GB wolnego miejsca na dysku Dostęp root lub użytkownik z uprawnieniami sudo Skonfigurowany adres IP (publiczny lub prywatny) Instrukcja krok po kroku 1. Aktualizacja systemu Najpierw zaktualizuj system operacyjny:\nsudo apt update \u0026amp;\u0026amp; sudo apt upgrade -y 2. Instalacja wymaganych pakietów Zainstaluj niezbędne zależności:\nsudo apt install -y curl openssh-server ca-certificates Jeśli planujesz korzystać z powiadomień email, zainstaluj Postfix:\nsudo apt install -y postfix Uwaga: Podczas instalacji Postfix wybierz opcję \u0026ldquo;Internet Site\u0026rdquo; i wprowadź nazwę swojej domeny.\n3. Dodanie repozytorium GitLab Dodaj oficjalne repozytorium GitLab:\ncurl -fsSL https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh | sudo bash 4. Instalacja GitLab CE Zainstaluj GitLab CE, określając docelowy URL:\nsudo EXTERNAL_URL=\u0026#34;http://gitlab.twojadomena.com\u0026#34; apt install -y gitlab-ce Ważne: Zamień gitlab.twojadomena.com na właściwy adres swojego serwera.\n5. Podstawowa konfiguracja Uruchom wstępną konfigurację:\nsudo gitlab-ctl reconfigure 6. Pierwsze uruchomienie Otwórz przeglądarkę i przejdź pod skonfigurowany adres Ustaw hasło dla konta administratora (root) Zaloguj się używając loginu root i ustawionego hasła 7. Przydatne komendy administracyjne Zarządzanie usługą GitLab:\n# Sprawdzenie statusu sudo gitlab-ctl status # Restart usługi sudo gitlab-ctl restart # Zatrzymanie usługi sudo gitlab-ctl stop # Uruchomienie usługi sudo gitlab-ctl start 8. Konfiguracja SSL (opcjonalnie) Aby zabezpieczyć GitLab przez HTTPS:\nEdytuj plik konfiguracyjny: sudo nano /etc/gitlab/gitlab.rb Dodaj lub zmodyfikuj następujące linie: external_url \u0026#34;https://gitlab.twojadomena.com\u0026#34; letsencrypt[\u0026#39;enable\u0026#39;] = true letsencrypt[\u0026#39;contact_emails\u0026#39;] = [\u0026#39;admin@twojadomena.com\u0026#39;] Zastosuj zmiany: sudo gitlab-ctl reconfigure 9. Tworzenie kopii zapasowych Aby utworzyć kopię zapasową:\nsudo gitlab-backup create Informacja: Kopie zapasowe są przechowywane w katalogu /var/opt/gitlab/backups/\nRozwiązywanie problemów Jeśli napotkasz problemy podczas instalacji:\nSprawdź logi: sudo gitlab-ctl tail Upewnij się, że wszystkie usługi działają: sudo gitlab-ctl status Zweryfikuj konfigurację: sudo gitlab-ctl check-config Wsparcie Dokumentacja GitLab: https://docs.gitlab.com/ Forum społeczności: https://forum.gitlab.com/ Issue tracker: https://gitlab.com/gitlab-org/gitlab/issues ","permalink":"//localhost:1313/posts/projects/gitlab/","summary":"\u003ch1 id=\"instrukcja-instalacji-gitlab-ce-na-ubuntudebian\"\u003eInstrukcja instalacji GitLab CE na Ubuntu/Debian\u003c/h1\u003e\n\u003ch2 id=\"wprowadzenie\"\u003eWprowadzenie\u003c/h2\u003e\n\u003cp\u003eTen przewodnik przeprowadzi Cię przez proces instalacji GitLab Community Edition (CE) na serwerze Ubuntu/Debian. GitLab CE to darmowa, samodzielnie hostowana platforma do zarządzania kodem źródłowym i projektami.\u003c/p\u003e\n\u003ch2 id=\"wymagania-systemowe\"\u003eWymagania systemowe\u003c/h2\u003e\n\u003cp\u003ePrzed rozpoczęciem instalacji upewnij się, że Twój serwer spełnia następujące wymagania:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUbuntu 20.04 lub nowszy / Debian 10 lub nowszy\u003c/li\u003e\n\u003cli\u003eMinimum 4 GB RAM (zalecane 8 GB)\u003c/li\u003e\n\u003cli\u003eMinimum 10 GB wolnego miejsca na dysku\u003c/li\u003e\n\u003cli\u003eDostęp root lub użytkownik z uprawnieniami sudo\u003c/li\u003e\n\u003cli\u003eSkonfigurowany adres IP (publiczny lub prywatny)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"instrukcja-krok-po-kroku\"\u003eInstrukcja krok po kroku\u003c/h2\u003e\n\u003ch3 id=\"1-aktualizacja-systemu\"\u003e1. Aktualizacja systemu\u003c/h3\u003e\n\u003cp\u003eNajpierw zaktualizuj system operacyjny:\u003c/p\u003e","title":"Instalacja Gitlab"},{"content":"Najczęściej Atakowane Porty Sieciowe - Co Powinieneś Wiedzieć Bezpieczeństwo sieciowe jest kluczowym aspektem współczesnej infrastruktury IT. Zrozumienie, które porty są najczęściej atakowane, może pomóc w lepszej ochronie systemów. Przyjrzyjmy się najważniejszym portom, które wymagają szczególnej uwagi.\nCzęsto Atakowane Porty i Ich Funkcje Porty Związane z Transferem Plików Port 21 (FTP): Protokół transferu plików, często atakowany ze względu na przesyłanie danych w formie niezaszyfrowanej Port 69 (TFTP): Trivial File Transfer Protocol, uproszczona wersja FTP bez uwierzytelniania Porty Dostępu Zdalnego Port 22 (SSH): Secure Shell - mimo że jest bezpieczny, często jest celem ataków brute force Port 23 (Telnet): Niezaszyfrowany protokół dostępu zdalnego, bardzo podatny na ataki Porty Komunikacyjne Port 25 (SMTP): Simple Mail Transfer Protocol, często wykorzystywany w atakach spamowych Port 53 (DNS): Domain Name System, cel ataków DDoS i zatrucia cache DNS Porty Webowe Port 80 (HTTP): Standardowy port WWW Port 443 (HTTPS): Bezpieczna wersja HTTP Port 8080: Alternatywny port HTTP Port 8443: Alternatywny port HTTPS Porty Systemu Windows Port 135 (RPC): Windows Remote Procedure Call Port 137-139: NetBIOS over TCP/IP, często wykorzystywany w starszych systemach Windows Jak Się Chronić? Regularne Audyty Portów\nSprawdzaj, które porty są otwarte Zamykaj nieużywane porty Monitoruj ruch sieciowy Podstawowe Zasady Bezpieczeństwa\nUżywaj zapory sieciowej (firewall) Aktualizuj systemy i oprogramowanie Stosuj silne hasła i uwierzytelnianie dwuskładnikowe Dobre Praktyki\nUnikaj używania niezabezpieczonych protokołów (np. Telnet) Preferuj szyfrowane odpowiedniki (np. SSH zamiast Telnet) Regularnie monitoruj logi systemowe Podsumowanie Świadomość najczęściej atakowanych portów to pierwszy krok w zabezpieczeniu infrastruktury sieciowej. Regularne audyty, aktualizacje i stosowanie dobrych praktyk bezpieczeństwa pomogą zminimalizować ryzyko skutecznego ataku.\n","permalink":"//localhost:1313/publications/najczesciej-atakowane-porty/","summary":"\u003ch1 id=\"najczęściej-atakowane-porty-sieciowe---co-powinieneś-wiedzieć\"\u003eNajczęściej Atakowane Porty Sieciowe - Co Powinieneś Wiedzieć\u003c/h1\u003e\n\u003cp\u003eBezpieczeństwo sieciowe jest kluczowym aspektem współczesnej infrastruktury IT. Zrozumienie, które porty są najczęściej atakowane, może pomóc w lepszej ochronie systemów. Przyjrzyjmy się najważniejszym portom, które wymagają szczególnej uwagi.\u003c/p\u003e\n\u003ch2 id=\"często-atakowane-porty-i-ich-funkcje\"\u003eCzęsto Atakowane Porty i Ich Funkcje\u003c/h2\u003e\n\u003ch3 id=\"porty-związane-z-transferem-plików\"\u003ePorty Związane z Transferem Plików\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003ePort 21 (FTP)\u003c/strong\u003e: Protokół transferu plików, często atakowany ze względu na przesyłanie danych w formie niezaszyfrowanej\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePort 69 (TFTP)\u003c/strong\u003e: Trivial File Transfer Protocol, uproszczona wersja FTP bez uwierzytelniania\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"porty-dostępu-zdalnego\"\u003ePorty Dostępu Zdalnego\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003ePort 22 (SSH)\u003c/strong\u003e: Secure Shell - mimo że jest bezpieczny, często jest celem ataków brute force\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePort 23 (Telnet)\u003c/strong\u003e: Niezaszyfrowany protokół dostępu zdalnego, bardzo podatny na ataki\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"porty-komunikacyjne\"\u003ePorty Komunikacyjne\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003ePort 25 (SMTP)\u003c/strong\u003e: Simple Mail Transfer Protocol, często wykorzystywany w atakach spamowych\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePort 53 (DNS)\u003c/strong\u003e: Domain Name System, cel ataków DDoS i zatrucia cache DNS\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"porty-webowe\"\u003ePorty Webowe\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003ePort 80 (HTTP)\u003c/strong\u003e: Standardowy port WWW\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePort 443 (HTTPS)\u003c/strong\u003e: Bezpieczna wersja HTTP\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePort 8080\u003c/strong\u003e: Alternatywny port HTTP\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePort 8443\u003c/strong\u003e: Alternatywny port HTTPS\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"porty-systemu-windows\"\u003ePorty Systemu Windows\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003ePort 135 (RPC)\u003c/strong\u003e: Windows Remote Procedure Call\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePort 137-139\u003c/strong\u003e: NetBIOS over TCP/IP, często wykorzystywany w starszych systemach Windows\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"jak-się-chronić\"\u003eJak Się Chronić?\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eRegularne Audyty Portów\u003c/strong\u003e\u003c/p\u003e","title":"Najczęściej Atakowane Porty Sieciowe - Co Powinieneś Wiedzieć"},{"content":"SELinux - Kompleksowy przewodnik Spis treści Wprowadzenie do SELinux Architektura SELinux Tryby pracy Konteksty bezpieczeństwa Polityki SELinux Podstawowe komendy Booleany Rozwiązywanie problemów Najlepsze praktyki Wprowadzenie do SELinux Security-Enhanced Linux (SELinux) to zaawansowany system kontroli dostępu (MAC - Mandatory Access Control) zaimplementowany w jądrze Linux. Został pierwotnie opracowany przez NSA i później zintegrowany z wieloma dystrybucjami Linux.\nGłówne cechy: Kontrola dostępu na poziomie jądra systemu Szczegółowa polityka bezpieczeństwa Ochrona przed eskalacją uprawnień Izolacja procesów i usług Minimalizacja potencjalnych zagrożeń Architektura SELinux SELinux działa na zasadzie etykietowania (labeling) wszystkich obiektów w systemie i kontrolowania dostępu między nimi na podstawie zdefiniowanych reguł.\nKomponenty: Kernel SELinux Polityki bezpieczeństwa Narzędzia użytkownika System logowania # Sprawdzenie czy SELinux jest zainstalowany rpm -qa | grep selinux Tryby pracy SELinux może działać w trzech trybach, które określają jak system reaguje na naruszenia polityki.\n1. Enforcing Polityka jest aktywnie egzekwowana Naruszenia są blokowane i logowane Zalecany w środowisku produkcyjnym # Włączenie trybu Enforcing sudo setenforce 1 2. Permissive Polityka nie jest egzekwowana Naruszenia są tylko logowane Przydatny do debugowania i testowania # Włączenie trybu Permissive sudo setenforce 0 3. Disabled SELinux jest całkowicie wyłączony Brak kontroli dostępu Niezalecany w produkcji # Sprawdzenie aktualnego trybu sestatus Konteksty bezpieczeństwa Każdy obiekt w systemie (pliki, procesy, porty) posiada kontekst bezpieczeństwa składający się z czterech elementów:\nFormat kontekstu: user:role:type:level user: Tożsamość SELinux role: Przypisana rola w systemie type: Typ obiektu lub domeny level: Poziom bezpieczeństwa (używany w MLS) # Sprawdzenie kontekstu pliku ls -Z /ścieżka/do/pliku # Sprawdzenie kontekstu procesu ps auxZ | grep httpd Zarządzanie kontekstami: # Zmiana kontekstu pliku sudo chcon -t httpd_sys_content_t /var/www/html/index.html # Przywrócenie domyślnego kontekstu sudo restorecon -Rv /var/www/html/ # Dodanie reguły trwałej sudo semanage fcontext -a -t httpd_sys_content_t \u0026#34;/var/www/custom(/.*)?\u0026#34; Polityki SELinux SELinux oferuje różne typy polityk dostosowane do różnych przypadków użycia.\nTargeted (domyślna) Chroni tylko wybrane usługi systemowe Najprostsza w konfiguracji Zalecana dla większości przypadków MLS (Multi-Level Security) Zaawansowana kontrola dostępu Używana w środowiskach o wysokich wymaganiach bezpieczeństwa Wymaga szczegółowej konfiguracji # Sprawdzenie aktywnej polityki sestatus | grep \u0026#34;Loaded policy\u0026#34; # Lista dostępnych polityk semodule -l Podstawowe komendy Sprawdzanie statusu i konfiguracji: # Status SELinux sestatus # Aktywne porty semanage port -l # Lista modułów polityki semodule -l Zarządzanie kontekstami: # Zmiana kontekstu chcon -t httpd_sys_content_t plik.html # Przywracanie domyślnych kontekstów restorecon -Rv /ścieżka # Dodawanie reguł trwałych semanage fcontext -a -t httpd_sys_content_t \u0026#34;/custom/path(/.*)?\u0026#34; Booleany Booleany to przełączniki umożliwiające szybką modyfikację zachowania polityki SELinux.\n# Lista wszystkich booleanów getsebool -a # Sprawdzenie konkretnego booleana getsebool httpd_enable_homedirs # Włączenie booleana (tymczasowo) setsebool httpd_enable_homedirs on # Włączenie booleana (trwale) setsebool -P httpd_enable_homedirs on Popularne booleany: httpd_enable_homedirs: Dostęp Apache do katalogów domowych ftpd_anon_write: Zapis przez anonimowego FTP httpd_can_network_connect: Połączenia sieciowe dla Apache Rozwiązywanie problemów Analiza logów: # Przeszukiwanie logów audytu ausearch -m AVC -ts recent # Analiza naruszeń audit2why \u0026lt; /var/log/audit/audit.log # Generowanie modułu polityki audit2allow -a -M mymodule Typowe problemy: Nieprawidłowe konteksty plików Brakujące porty w polityce Wymagane booleany są wyłączone Konflikty z innymi mechanizmami bezpieczeństwa Rozwiązywanie: # Sprawdzenie kontekstów ls -Z # Dodanie portu semanage port -a -t http_port_t -p tcp 8080 # Włączenie wymaganego booleana setsebool -P httpd_can_network_connect on Najlepsze praktyki Używaj trybu Enforcing\nZawsze w środowisku produkcyjnym Permissive tylko do debugowania Regularnie monitoruj logi\nausearch -m AVC -ts recent Twórz własne moduły polityki\naudit2allow -a -M custom_policy semodule -i custom_policy.pp Dokumentuj zmiany\nZapisuj wszystkie modyfikacje kontekstów Przechowuj listę własnych modułów polityki Automatyzuj zarządzanie\nUżywaj narzędzi do zarządzania konfiguracją Twórz skrypty do typowych operacji Regularne aktualizacje\n# Aktualizacja polityk yum update selinux-policy Przykładowa automatyzacja: #!/bin/bash # Skrypt do konfiguracji kontekstów dla nowej aplikacji web # Ustawienie kontekstów semanage fcontext -a -t httpd_sys_content_t \u0026#34;/var/www/app(/.*)?\u0026#34; restorecon -Rv /var/www/app # Włączenie wymaganych booleanów setsebool -P httpd_can_network_connect on setsebool -P httpd_can_network_connect_db on # Sprawdzenie konfiguracji sestatus getsebool -a | grep httpd ls -Z /var/www/app ","permalink":"//localhost:1313/posts/projects/selinux/","summary":"\u003ch1 id=\"selinux---kompleksowy-przewodnik\"\u003eSELinux - Kompleksowy przewodnik\u003c/h1\u003e\n\u003ch2 id=\"spis-treści\"\u003eSpis treści\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#wprowadzenie-do-selinux\"\u003eWprowadzenie do SELinux\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#architektura-selinux\"\u003eArchitektura SELinux\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#tryby-pracy\"\u003eTryby pracy\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#konteksty-bezpiecze%C5%84stwa\"\u003eKonteksty bezpieczeństwa\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#polityki-selinux\"\u003ePolityki SELinux\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#podstawowe-komendy\"\u003ePodstawowe komendy\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#booleany\"\u003eBooleany\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#rozwi%C4%85zywanie-problem%C3%B3w\"\u003eRozwiązywanie problemów\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#najlepsze-praktyki\"\u003eNajlepsze praktyki\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"wprowadzenie-do-selinux\"\u003eWprowadzenie do SELinux\u003c/h2\u003e\n\u003cp\u003eSecurity-Enhanced Linux (SELinux) to zaawansowany system kontroli dostępu (MAC - Mandatory Access Control) zaimplementowany w jądrze Linux. Został pierwotnie opracowany przez NSA i później zintegrowany z wieloma dystrybucjami Linux.\u003c/p\u003e\n\u003ch3 id=\"główne-cechy\"\u003eGłówne cechy:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eKontrola dostępu na poziomie jądra systemu\u003c/li\u003e\n\u003cli\u003eSzczegółowa polityka bezpieczeństwa\u003c/li\u003e\n\u003cli\u003eOchrona przed eskalacją uprawnień\u003c/li\u003e\n\u003cli\u003eIzolacja procesów i usług\u003c/li\u003e\n\u003cli\u003eMinimalizacja potencjalnych zagrożeń\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"architektura-selinux\"\u003eArchitektura SELinux\u003c/h2\u003e\n\u003cp\u003eSELinux działa na zasadzie etykietowania (labeling) wszystkich obiektów w systemie i kontrolowania dostępu między nimi na podstawie zdefiniowanych reguł.\u003c/p\u003e","title":"SElinux-Wprowadzenie"},{"content":"Instalacja Wazuh - kompletny przewodnik dla początkujących Cześć! W dzisiejszym wpisie przeprowadzę Cię przez proces instalacji Wazuh - potężnego narzędzia do monitorowania bezpieczeństwa. Niezależnie od tego, czy zabezpieczasz małą firmę czy własne projekty, Wazuh może znacząco poprawić Twoje bezpieczeństwo IT.\nCo to jest Wazuh? Wazuh to wszechstronne narzędzie open-source, które łączy w sobie:\nMonitoring bezpieczeństwa w czasie rzeczywistym Wykrywanie włamań Monitorowanie integralności plików Reagowanie na zagrożenia Zgodność z przepisami (GDPR, PCI DSS) Wymagania systemowe Zanim zaczniemy, upewnij się, że Twój serwer spełnia minimalne wymagania:\nDla serwera Wazuh: CPU: minimum 4 rdzenie RAM: minimum 8GB (zalecane 16GB) Dysk: minimum 50GB (zalecane 100GB) System: Ubuntu 22.04 LTS (zalecany) Dla agentów Wazuh: CPU: 2 rdzenie RAM: 2GB Dysk: 20GB Wspierane systemy: Linux, Windows, macOS Krok 1: Przygotowanie systemu Najpierw zaktualizujmy system i skonfigurujmy podstawowe zabezpieczenia:\n# Aktualizacja systemu sudo apt update \u0026amp;\u0026amp; sudo apt upgrade -y # Konfiguracja firewalla sudo ufw allow 1514/tcp # Komunikacja agent-server sudo ufw allow 1515/tcp # Rejestracja agentów sudo ufw allow 443/tcp # Panel webowy sudo ufw enable Krok 2: Instalacja serwera Wazuh Teraz przechodzimy do właściwej instalacji:\n# Pobieranie instalatora curl -sO https://packages.wazuh.com/4.7/wazuh-install.sh # Uruchomienie instalacji (opcja -a instaluje wszystkie komponenty) sudo bash ./wazuh-install.sh -a Po instalacji sprawdź, czy wszystkie usługi działają poprawnie:\nsudo systemctl status wazuh-manager sudo systemctl status wazuh-indexer sudo systemctl status wazuh-dashboard Krok 3: Instalacja agentów Dla Ubuntu/Debian: wget https://packages.wazuh.com/4.x/apt/pool/main/w/wazuh-agent/wazuh-agent_4.7.5-1_amd64.deb sudo WAZUH_MANAGER=\u0026#39;ip_twojego_serwera\u0026#39; WAZUH_AGENT_NAME=\u0026#39;nazwa_hosta\u0026#39; dpkg -i ./wazuh-agent_4.7.5-1_amd64.deb sudo systemctl start wazuh-agent Dla Windows: Pobierz instalator ze strony Wazuh Uruchom instalator jako administrator Podaj adres IP serwera Wazuh podczas instalacji Krok 4: Podstawowa konfiguracja Główny plik konfiguracyjny serwera znajduje się w /var/ossec/etc/ossec.conf. Oto przykładowa podstawowa konfiguracja:\n\u0026lt;ossec_config\u0026gt; \u0026lt;global\u0026gt; \u0026lt;email_notification\u0026gt;yes\u0026lt;/email_notification\u0026gt; \u0026lt;email_to\u0026gt;twoj@email.com\u0026lt;/email_to\u0026gt; \u0026lt;smtp_server\u0026gt;smtp.twojserwer.com\u0026lt;/smtp_server\u0026gt; \u0026lt;email_from\u0026gt;wazuh@twojadomena.com\u0026lt;/email_from\u0026gt; \u0026lt;/global\u0026gt; \u0026lt;syscheck\u0026gt; \u0026lt;frequency\u0026gt;43200\u0026lt;/frequency\u0026gt; \u0026lt;directories check_all=\u0026#34;yes\u0026#34;\u0026gt;/etc,/usr/bin,/usr/sbin\u0026lt;/directories\u0026gt; \u0026lt;directories check_all=\u0026#34;yes\u0026#34;\u0026gt;/var/www,/var/lib\u0026lt;/directories\u0026gt; \u0026lt;/syscheck\u0026gt; \u0026lt;/ossec_config\u0026gt; Krok 5: Pierwsze logowanie Otwórz przeglądarkę i przejdź do https://ip_twojego_serwera Zaloguj się używając domyślnych danych (znajdziesz je w /var/ossec/etc/wazuh-dashboard/credentials.txt) Zmień hasło przy pierwszym logowaniu Najczęstsze problemy i rozwiązania Problem z połączeniem agenta: # Sprawdź status agenta sudo systemctl status wazuh-agent # Sprawdź logi tail -f /var/ossec/logs/ossec.log Problemy z serwerem: # Weryfikacja statusu sudo systemctl status wazuh-manager # Sprawdzenie logów tail -f /var/ossec/logs/ossec.log Co dalej? Po podstawowej instalacji warto: 9. Skonfigurować dodatkowe reguły monitorowania 10. Ustawić powiadomienia (np. przez Slack lub email) 11. Skonfigurować regular backups 12. Dostosować dashboardy do swoich potrzeb\nWskazówki bezpieczeństwa Regularnie aktualizuj system i komponenty Wazuh Zmień domyślne hasła Ogranicz dostęp do panelu administracyjnego Włącz uwierzytelnianie dwuskładnikowe Regularnie twórz kopie zapasowe konfiguracji Przydatne linki Oficjalna dokumentacja Wazuh Forum społeczności Wazuh GitHub Wazuh Mam nadzieję, że ten przewodnik pomoże Ci w sprawnej instalacji Wazuh! Jeśli masz pytania, zostaw komentarz poniżej.\nOstatnia aktualizacja: Luty 2025\n","permalink":"//localhost:1313/posts/projects/wazuh/","summary":"\u003ch1 id=\"instalacja-wazuh---kompletny-przewodnik-dla-początkujących\"\u003eInstalacja Wazuh - kompletny przewodnik dla początkujących\u003c/h1\u003e\n\u003cp\u003eCześć! W dzisiejszym wpisie przeprowadzę Cię przez proces instalacji Wazuh - potężnego narzędzia do monitorowania bezpieczeństwa. Niezależnie od tego, czy zabezpieczasz małą firmę czy własne projekty, Wazuh może znacząco poprawić Twoje bezpieczeństwo IT.\u003c/p\u003e\n\u003ch2 id=\"co-to-jest-wazuh\"\u003eCo to jest Wazuh?\u003c/h2\u003e\n\u003cp\u003eWazuh to wszechstronne narzędzie open-source, które łączy w sobie:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMonitoring bezpieczeństwa w czasie rzeczywistym\u003c/li\u003e\n\u003cli\u003eWykrywanie włamań\u003c/li\u003e\n\u003cli\u003eMonitorowanie integralności plików\u003c/li\u003e\n\u003cli\u003eReagowanie na zagrożenia\u003c/li\u003e\n\u003cli\u003eZgodność z przepisami (GDPR, PCI DSS)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"wymagania-systemowe\"\u003eWymagania systemowe\u003c/h2\u003e\n\u003cp\u003eZanim zaczniemy, upewnij się, że Twój serwer spełnia minimalne wymagania:\u003c/p\u003e","title":"Wazuh"},{"content":"Przewodnik Konfiguracji Lokalnego Serwera DNS BIND Ten przewodnik pomoże Ci skonfigurować lokalny serwer DNS przy użyciu BIND9 do obsługi własnej domeny (np. mydomain.local) z obsługą rozwiązywania nazw w przód i wstecz.\nWymagania wstępne System Ubuntu/Debian\nDostęp root lub sudo\nPodstawowa znajomość koncepcji DNS\nInstalacja Zaktualizuj system i zainstaluj BIND9:\nsudo apt update sudo apt upgrade -y sudo apt install bind9 bind9utils bind9-doc -y Sprawdź status usługi BIND:\nsudo systemctl status bind9 Konfiguracja 1. Konfiguracja stref lokalnych Edytuj plik konfiguracji lokalnej:\nsudo nano /etc/bind/named.conf.local Dodaj następujące konfiguracje stref:\nzone \u0026#34;mydomain.local\u0026#34; { type master; file \u0026#34;/etc/bind/zones/mydomain.local.zone\u0026#34;; }; zone \u0026#34;0.0.127.in-addr.arpa\u0026#34; { type master; file \u0026#34;/etc/bind/zones/reverse.local.zone\u0026#34;; }; 2. Tworzenie plików stref Utwórz katalog na strefy:\nsudo mkdir -p /etc/bind/zones Plik strefy prostej (forward) Utwórz i edytuj plik strefy prostej:\nsudo nano /etc/bind/zones/mydomain.local.zone Dodaj następującą konfigurację:\n$TTL 86400 @ IN SOA ns1.mydomain.local. admin.mydomain.local. ( 2025011401 ; Numer seryjny 3600 ; Odświeżanie 1800 ; Ponawianie 1209600 ; Wygaśnięcie 86400 ) ; Minimalny TTL @ IN NS ns1.mydomain.local. @ IN A 127.0.0.1 ns1 IN A 127.0.0.1 www IN A 127.0.0.1 app IN A 127.0.0.2 Plik strefy odwrotnej (reverse) Utwórz i edytuj plik strefy odwrotnej:\nsudo nano /etc/bind/zones/reverse.local.zone Dodaj następującą konfigurację:\n$TTL 86400 @ IN SOA ns1.mydomain.local. admin.mydomain.local. ( 2025011401 ; Numer seryjny 3600 ; Odświeżanie 1800 ; Ponawianie 1209600 ; Wygaśnięcie 86400 ) ; Minimalny TTL @ IN NS ns1.mydomain.local. 1 IN PTR ns1.mydomain.local. 1 IN PTR www.mydomain.local. 2 IN PTR app.mydomain.local. 3. Konfiguracja opcji BIND Edytuj plik opcji:\nsudo nano /etc/bind/named.conf.options Dodaj następującą konfigurację:\noptions { directory \u0026#34;/var/cache/bind\u0026#34;; recursion yes; allow-query { localhost; }; forwarders { 8.8.8.8; // DNS Google 1.1.1.1; // DNS Cloudflare }; dnssec-validation auto; listen-on { 127.0.0.1; }; listen-on-v6 { ::1; }; }; Weryfikacja i testowanie 1. Sprawdź składnię konfiguracji sudo named-checkconf sudo named-checkzone mydomain.local /etc/bind/zones/mydomain.local.zone sudo named-checkzone 0.0.127.in-addr.arpa /etc/bind/zones/reverse.local.zone 2. Zrestartuj usługę BIND sudo systemctl restart bind9 3. Przetestuj rozwiązywanie DNS Test wyszukiwania do przodu:\ndig @127.0.0.1 www.mydomain.local Test wyszukiwania wstecznego:\ndig -x 127.0.0.1 @127.0.0.1 Rozwiązywanie problemów Sprawdź logi BIND: sudo tail -f /var/log/syslog | grep named Sprawdź status usługi: sudo systemctl status bind9 Sprawdź uprawnienia plików stref: sudo ls -l /etc/bind/zones/ Typowe problemy Usługa nie uruchamia się: Sprawdź błędy składni w plikach konfiguracyjnych\nRozwiązywanie DNS nie działa: Sprawdź ustawienia zapory sieciowej i adresy nasłuchiwania BIND\nProblemy z transferem stref: Sprawdź uprawnienia plików i składnię plików stref\nAspekty bezpieczeństwa Ogranicz transfery stref do zaufanych serwerów\nSkonfiguruj odpowiednie listy kontroli dostępu w allow-query\nAktualizuj BIND o najnowsze poprawki bezpieczeństwa\nUżyj DNSSEC dla zwiększonego bezpieczeństwa\nDodatkowe źródła Dokumentacja BIND\nPrzewodnik BIND dla Ubuntu\n","permalink":"//localhost:1313/posts/projects/instalacja_bind/","summary":"\u003ch1 id=\"przewodnik-konfiguracji-lokalnego-serwera-dns-bind\"\u003ePrzewodnik Konfiguracji Lokalnego Serwera DNS BIND\u003c/h1\u003e\n\u003cp\u003eTen przewodnik pomoże Ci skonfigurować lokalny serwer DNS przy użyciu BIND9 do obsługi własnej domeny (np. mydomain.local) z obsługą rozwiązywania nazw w przód i wstecz.\u003c/p\u003e\n\u003ch2 id=\"wymagania-wstępne\"\u003eWymagania wstępne\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eSystem Ubuntu/Debian\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDostęp root lub sudo\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePodstawowa znajomość koncepcji DNS\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"instalacja\"\u003eInstalacja\u003c/h2\u003e\n\u003cp\u003eZaktualizuj system i zainstaluj BIND9:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo apt update\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo apt upgrade -y\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo apt install bind9 bind9utils bind9-doc -y\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSprawdź status usługi BIND:\u003c/p\u003e","title":"Instalacja Bind"},{"content":"Konfiguracja Split-Horizon DNS na CentOS/AlmaLinux Ten poradnik przeprowadzi Cię przez proces konfiguracji Split-Horizon DNS przy użyciu BIND na systemach CentOS lub AlmaLinux. Split-Horizon DNS pozwala serwerowi DNS zwracać różne rekordy w zależności od źródła zapytania (sieć wewnętrzna vs zewnętrzna).\n1. Wymagania wstępne CentOS, AlmaLinux lub RedHat z dostępem root lub sudo Zainstalowany BIND (bind i bind-utils) 2. Instalacja BIND sudo dnf install bind bind-utils -y 3. Przygotowanie plików stref Utworzenie katalogu stref:\nsudo mkdir -p /etc/named/zones Plik strefy wewnętrznej Utwórz plik /etc/named/zones/internal.example.com.zone:\n$TTL 86400\r@ IN SOA ns1.example.com. admin.example.com. (\r2025011501 ; Numer seryjny\r3600 ; Odświeżanie\r1800 ; Ponawianie\r1209600 ; Wygaśnięcie\r86400 ) ; Minimalny TTL\r@ IN NS ns1.example.com.\rns1 IN A 192.168.1.1\rwww IN A 192.168.1.2\rmail IN A 192.168.1.3 Plik strefy zewnętrznej Utwórz plik /etc/named/zones/external.example.com.zone:\n$TTL 86400\r@ IN SOA ns1.example.com. admin.example.com. (\r2025011501 ; Numer seryjny\r3600 ; Odświeżanie\r1800 ; Ponawianie\r1209600 ; Wygaśnięcie\r86400 ) ; Minimalny TTL\r@ IN NS ns1.example.com.\rns1 IN A 203.0.113.1\rwww IN A 203.0.113.2\rmail IN A 203.0.113.3 4. Konfiguracja BIND Edytuj plik /etc/named.conf aby zdefiniować widoki dla zapytań wewnętrznych i zewnętrznych.\nWidok wewnętrzny view \u0026#34;internal\u0026#34; {\rmatch-clients { 192.168.1.0/24; localhost; }; // Sieć wewnętrzna\rzone \u0026#34;example.com\u0026#34; {\rtype master;\rfile \u0026#34;/etc/named/zones/internal.example.com.zone\u0026#34;;\r};\r}; Widok zewnętrzny view \u0026#34;external\u0026#34; {\rmatch-clients { any; }; // Wszystkie pozostałe źródła\rzone \u0026#34;example.com\u0026#34; {\rtype master;\rfile \u0026#34;/etc/named/zones/external.example.com.zone\u0026#34;;\r};\r}; 5. Walidacja konfiguracji Sprawdź plik konfiguracyjny:\nsudo named-checkconf Sprawdź pliki stref:\nsudo named-checkzone example.com /etc/named/zones/internal.example.com.zone sudo named-checkzone example.com /etc/named/zones/external.example.com.zone 6. Restart BIND Włącz i zrestartuj usługę BIND:\nsudo systemctl enable named sudo systemctl restart named Sprawdź status:\nsudo systemctl status named 7. Konfiguracja firewalla Zezwól na ruch DNS przez firewall:\nsudo firewall-cmd --permanent --add-service=dns sudo firewall-cmd --reload 8. Testowanie Test sieci wewnętrznej Uruchom to polecenie z maszyny w sieci wewnętrznej:\ndig @localhost www.example.com Oczekiwany wynik: IP z internal.example.com.zone (np. 192.168.1.2)\nTest sieci zewnętrznej Uruchom to polecenie z maszyny zewnętrznej:\ndig @\u0026lt;PUBLICZNE_IP_SERWERA_BIND\u0026gt; www.example.com Oczekiwany wynik: IP z external.example.com.zone (np. 203.0.113.2)\n9. Opcjonalnie: Włączenie logowania Dodaj konfigurację logowania Edytuj /etc/named.conf aby dodać logowanie:\nlogging {\rchannel query_log {\rfile \u0026#34;/var/log/named_queries.log\u0026#34;;\rseverity dynamic;\r};\rcategory queries { query_log; };\r}; Utwórz plik logów sudo touch /var/log/named_queries.log sudo chmod 640 /var/log/named_queries.log sudo chown named:named /var/log/named_queries.log Zrestartuj BIND sudo systemctl restart named Serwer Split-Horizon DNS jest teraz skonfigurowany i gotowy do użycia. W przypadku problemów, sprawdź dokładnie pliki konfiguracyjne i logi w celu rozwiązania problemów.\nPorady dotyczące rozwiązywania problemów Sprawdź status usługi BIND używając systemctl status named Przejrzyj logi systemowe: journalctl -u named Upewnij się, że porty są otwarte: netstat -tulpn | grep named Sprawdź uprawnienia do plików konfiguracyjnych ","permalink":"//localhost:1313/posts/projects/splithorizon/","summary":"\u003ch1 id=\"konfiguracja-split-horizon-dns-na-centosalmalinux\"\u003eKonfiguracja Split-Horizon DNS na CentOS/AlmaLinux\u003c/h1\u003e\n\u003cp\u003eTen poradnik przeprowadzi Cię przez proces konfiguracji Split-Horizon DNS przy użyciu BIND na systemach CentOS lub AlmaLinux. Split-Horizon DNS pozwala serwerowi DNS zwracać różne rekordy w zależności od źródła zapytania (sieć wewnętrzna vs zewnętrzna).\u003c/p\u003e\n\u003ch2 id=\"1-wymagania-wstępne\"\u003e1. Wymagania wstępne\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eCentOS, AlmaLinux lub RedHat z dostępem root lub sudo\u003c/li\u003e\n\u003cli\u003eZainstalowany BIND (\u003ccode\u003ebind\u003c/code\u003e i \u003ccode\u003ebind-utils\u003c/code\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2-instalacja-bind\"\u003e2. Instalacja BIND\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo dnf install \u003cspan class=\"nb\"\u003ebind\u003c/span\u003e bind-utils -y\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"3-przygotowanie-plików-stref\"\u003e3. Przygotowanie plików stref\u003c/h2\u003e\n\u003cp\u003eUtworzenie katalogu stref:\u003c/p\u003e","title":"Split-HorizonDNS"},{"content":"Przewodnik Instalacji Dockera Docker to platforma konteneryzacji, która umożliwia uruchamianie aplikacji w lekkich, izolowanych środowiskach. Poniżej znajdziesz instrukcje instalacji dla różnych dystrybucji Linuxa.\n1. Ubuntu/Debian Aktualizacja systemu:\nsudo apt update \u0026amp;\u0026amp; sudo apt upgrade -y Instalacja wymaganych pakietów:\nsudo apt install -y curl apt-transport-https ca-certificates software-properties-common Dodanie repozytorium Dockera:\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo \u0026#34;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\u0026#34; | sudo tee /etc/apt/sources.list.d/docker.list Instalacja Dockera:\nsudo apt update sudo apt install -y docker-ce docker-ce-cli containerd.io Włączenie i uruchomienie Dockera:\nsudo systemctl enable docker sudo systemctl start docker Weryfikacja instalacji:\nsudo docker run hello-world 2. Red Hat/CentOS Aktualizacja systemu:\nsudo yum update -y Dodanie repozytorium Dockera:\nsudo yum install -y yum-utils sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo Instalacja Dockera:\nsudo yum install -y docker-ce docker-ce-cli containerd.io Włączenie i uruchomienie Dockera:\nsudo systemctl enable docker sudo systemctl start docker Weryfikacja instalacji:\nsudo docker run hello-world 3. Fedora Aktualizacja systemu:\nsudo dnf update -y Dodanie repozytorium Dockera:\nsudo dnf install -y dnf-plugins-core sudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo Instalacja Dockera:\nsudo dnf install -y docker-ce docker-ce-cli containerd.io Włączenie i uruchomienie Dockera:\nsudo systemctl enable docker sudo systemctl start docker Weryfikacja instalacji:\nsudo docker run hello-world 4. Arch Linux Aktualizacja systemu:\nsudo pacman -Syu Instalacja Dockera:\nsudo pacman -S docker Włączenie i uruchomienie Dockera:\nsudo systemctl enable docker sudo systemctl start docker Dodanie użytkownika do grupy Docker (opcjonalne):\nsudo usermod -aG docker $USER Weryfikacja instalacji:\nsudo docker run hello-world Uwagi Oficjalna dokumentacja:\nUbuntu/Debian Red Hat/CentOS Fedora Arch Linux Upewnij się, że Twoja dystrybucja Linuxa wspiera wymaganą wersję jądra.\nDocker jest teraz gotowy do użycia! 🚀\n","permalink":"//localhost:1313/posts/projects/docker/","summary":"\u003ch1 id=\"przewodnik-instalacji-dockera\"\u003ePrzewodnik Instalacji Dockera\u003c/h1\u003e\n\u003cp\u003eDocker to platforma konteneryzacji, która umożliwia uruchamianie aplikacji w lekkich, izolowanych środowiskach. Poniżej znajdziesz instrukcje instalacji dla różnych dystrybucji Linuxa.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"1-ubuntudebian\"\u003e1. Ubuntu/Debian\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eAktualizacja systemu\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo apt update \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e sudo apt upgrade -y\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eInstalacja wymaganych pakietów\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo apt install -y curl apt-transport-https ca-certificates software-properties-common\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eDodanie repozytorium Dockera\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecurl -fsSL https://download.docker.com/linux/ubuntu/gpg \u003cspan class=\"p\"\u003e|\u003c/span\u003e sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \u003c/span\u003e\u003cspan class=\"k\"\u003e$(\u003c/span\u003elsb_release -cs\u003cspan class=\"k\"\u003e)\u003c/span\u003e\u003cspan class=\"s2\"\u003e stable\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e sudo tee /etc/apt/sources.list.d/docker.list\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eInstalacja Dockera\u003c/strong\u003e:\u003c/p\u003e","title":"Instalacja Docker"},{"content":"Cześć! 👋 Jestem administratorem systemów Linux z doświadczeniem w zarządzaniu narzędziami CI/CD, kontenerami Docker oraz wirtualizacją (Proxmox, VMware). Posiadam także praktyczną wiedzę w zakresie platform chmurowych, takich jak AWS, Azure, GCP i Linode. Specjalizuję się w administracji serwerami Linux z rodzin Debian i Red Hat.\nMoje Umiejętności: Systemy Linux: Zarządzanie serwerami Debian i Red Hat. Wirtualizacja: Proxmox, VMware. Konteneryzacja: Docker, Kubernetes (rozwijam swoje umiejętności). Platformy Chmurowe: AWS, Azure, GCP, Linode. Narzędzia CI/CD: Ansible, Jenkins. Monitorowanie i zarządzanie infrastrukturą. Aktualne Cele: Rozwijam swoje umiejętności w Kubernetes i zaawansowanych rozwiązaniach chmurowych. Przygotowuję się do zdobycia certyfikatów: Google Cloud Professional (GCP) Red Hat Certified System Administrator (RHCSA). Dodatkowe Doświadczenie: Mam doświadczenie w zarządzaniu środowiskami Windows, w tym konfiguracją i monitorowaniem Active Directory. Moją długoterminową ambicją jest specjalizacja w utrzymaniu i zarządzaniu serwerami Linux oraz rozwoju w obszarze infrastruktury chmurowej.\nZnajdź Mnie Online: GitHub: MichalADA Dzięki za odwiedzenie mojego bloga! 🚀\n","permalink":"//localhost:1313/posts/about/","summary":"\u003ch1 id=\"cześć-\"\u003eCześć! 👋\u003c/h1\u003e\n\u003cp\u003eJestem administratorem systemów Linux z doświadczeniem w zarządzaniu narzędziami \u003cstrong\u003eCI/CD\u003c/strong\u003e, kontenerami \u003cstrong\u003eDocker\u003c/strong\u003e oraz wirtualizacją (\u003cstrong\u003eProxmox\u003c/strong\u003e, \u003cstrong\u003eVMware\u003c/strong\u003e). Posiadam także praktyczną wiedzę w zakresie platform chmurowych, takich jak \u003cstrong\u003eAWS\u003c/strong\u003e, \u003cstrong\u003eAzure\u003c/strong\u003e, \u003cstrong\u003eGCP\u003c/strong\u003e i \u003cstrong\u003eLinode\u003c/strong\u003e. Specjalizuję się w administracji serwerami Linux z rodzin \u003cstrong\u003eDebian\u003c/strong\u003e i \u003cstrong\u003eRed Hat\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"moje-umiejętności\"\u003eMoje Umiejętności:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eSystemy Linux\u003c/strong\u003e: Zarządzanie serwerami Debian i Red Hat.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eWirtualizacja\u003c/strong\u003e: Proxmox, VMware.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eKonteneryzacja\u003c/strong\u003e: Docker, Kubernetes (rozwijam swoje umiejętności).\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePlatformy Chmurowe\u003c/strong\u003e: AWS, Azure, GCP, Linode.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eNarzędzia CI/CD\u003c/strong\u003e: Ansible, Jenkins.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eMonitorowanie i zarządzanie infrastrukturą\u003c/strong\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"aktualne-cele\"\u003eAktualne Cele:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRozwijam swoje umiejętności w \u003cstrong\u003eKubernetes\u003c/strong\u003e i zaawansowanych rozwiązaniach chmurowych.\u003c/li\u003e\n\u003cli\u003ePrzygotowuję się do zdobycia certyfikatów:\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eGoogle Cloud Professional (GCP)\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eRed Hat Certified System Administrator (RHCSA)\u003c/strong\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"dodatkowe-doświadczenie\"\u003eDodatkowe Doświadczenie:\u003c/h2\u003e\n\u003cp\u003eMam doświadczenie w zarządzaniu środowiskami \u003cstrong\u003eWindows\u003c/strong\u003e, w tym konfiguracją i monitorowaniem \u003cstrong\u003eActive Directory\u003c/strong\u003e. Moją długoterminową ambicją jest specjalizacja w utrzymaniu i zarządzaniu serwerami Linux oraz rozwoju w obszarze infrastruktury chmurowej.\u003c/p\u003e","title":"O Mnie"},{"content":"Instrukcja instalacji GitLab CE na Ubuntu/Debian Wprowadzenie Ten przewodnik przeprowadzi Cię przez proces instalacji GitLab Community Edition (CE) na serwerze Ubuntu/Debian. GitLab CE to darmowa, samodzielnie hostowana platforma do zarządzania kodem źródłowym i projektami.\nWymagania systemowe Przed rozpoczęciem instalacji upewnij się, że Twój serwer spełnia następujące wymagania:\nUbuntu 20.04 lub nowszy / Debian 10 lub nowszy Minimum 4 GB RAM (zalecane 8 GB) Minimum 10 GB wolnego miejsca na dysku Dostęp root lub użytkownik z uprawnieniami sudo Skonfigurowany adres IP (publiczny lub prywatny) Instrukcja krok po kroku 1. Aktualizacja systemu Najpierw zaktualizuj system operacyjny:\nsudo apt update \u0026amp;\u0026amp; sudo apt upgrade -y 2. Instalacja wymaganych pakietów Zainstaluj niezbędne zależności:\nsudo apt install -y curl openssh-server ca-certificates Jeśli planujesz korzystać z powiadomień email, zainstaluj Postfix:\nsudo apt install -y postfix Uwaga: Podczas instalacji Postfix wybierz opcję \u0026ldquo;Internet Site\u0026rdquo; i wprowadź nazwę swojej domeny.\n3. Dodanie repozytorium GitLab Dodaj oficjalne repozytorium GitLab:\ncurl -fsSL https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh | sudo bash 4. Instalacja GitLab CE Zainstaluj GitLab CE, określając docelowy URL:\nsudo EXTERNAL_URL=\u0026#34;http://gitlab.twojadomena.com\u0026#34; apt install -y gitlab-ce Ważne: Zamień gitlab.twojadomena.com na właściwy adres swojego serwera.\n5. Podstawowa konfiguracja Uruchom wstępną konfigurację:\nsudo gitlab-ctl reconfigure 6. Pierwsze uruchomienie Otwórz przeglądarkę i przejdź pod skonfigurowany adres Ustaw hasło dla konta administratora (root) Zaloguj się używając loginu root i ustawionego hasła 7. Przydatne komendy administracyjne Zarządzanie usługą GitLab:\n# Sprawdzenie statusu sudo gitlab-ctl status # Restart usługi sudo gitlab-ctl restart # Zatrzymanie usługi sudo gitlab-ctl stop # Uruchomienie usługi sudo gitlab-ctl start 8. Konfiguracja SSL (opcjonalnie) Aby zabezpieczyć GitLab przez HTTPS:\nEdytuj plik konfiguracyjny: sudo nano /etc/gitlab/gitlab.rb Dodaj lub zmodyfikuj następujące linie: external_url \u0026#34;https://gitlab.twojadomena.com\u0026#34; letsencrypt[\u0026#39;enable\u0026#39;] = true letsencrypt[\u0026#39;contact_emails\u0026#39;] = [\u0026#39;admin@twojadomena.com\u0026#39;] Zastosuj zmiany: sudo gitlab-ctl reconfigure 9. Tworzenie kopii zapasowych Aby utworzyć kopię zapasową:\nsudo gitlab-backup create Informacja: Kopie zapasowe są przechowywane w katalogu /var/opt/gitlab/backups/\nRozwiązywanie problemów Jeśli napotkasz problemy podczas instalacji:\nSprawdź logi: sudo gitlab-ctl tail Upewnij się, że wszystkie usługi działają: sudo gitlab-ctl status Zweryfikuj konfigurację: sudo gitlab-ctl check-config Wsparcie Dokumentacja GitLab: https://docs.gitlab.com/ Forum społeczności: https://forum.gitlab.com/ Issue tracker: https://gitlab.com/gitlab-org/gitlab/issues ","permalink":"//localhost:1313/posts/projects/gitlab/","summary":"\u003ch1 id=\"instrukcja-instalacji-gitlab-ce-na-ubuntudebian\"\u003eInstrukcja instalacji GitLab CE na Ubuntu/Debian\u003c/h1\u003e\n\u003ch2 id=\"wprowadzenie\"\u003eWprowadzenie\u003c/h2\u003e\n\u003cp\u003eTen przewodnik przeprowadzi Cię przez proces instalacji GitLab Community Edition (CE) na serwerze Ubuntu/Debian. GitLab CE to darmowa, samodzielnie hostowana platforma do zarządzania kodem źródłowym i projektami.\u003c/p\u003e\n\u003ch2 id=\"wymagania-systemowe\"\u003eWymagania systemowe\u003c/h2\u003e\n\u003cp\u003ePrzed rozpoczęciem instalacji upewnij się, że Twój serwer spełnia następujące wymagania:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUbuntu 20.04 lub nowszy / Debian 10 lub nowszy\u003c/li\u003e\n\u003cli\u003eMinimum 4 GB RAM (zalecane 8 GB)\u003c/li\u003e\n\u003cli\u003eMinimum 10 GB wolnego miejsca na dysku\u003c/li\u003e\n\u003cli\u003eDostęp root lub użytkownik z uprawnieniami sudo\u003c/li\u003e\n\u003cli\u003eSkonfigurowany adres IP (publiczny lub prywatny)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"instrukcja-krok-po-kroku\"\u003eInstrukcja krok po kroku\u003c/h2\u003e\n\u003ch3 id=\"1-aktualizacja-systemu\"\u003e1. Aktualizacja systemu\u003c/h3\u003e\n\u003cp\u003eNajpierw zaktualizuj system operacyjny:\u003c/p\u003e","title":"Instalacja Gitlab"},{"content":" title: \u0026lsquo;Najczęściej Atakowane Porty Sieciowe - Kompleksowy Przewodnik Bezpieczeństwa\u0026rsquo; date: 2025-02-10 draft: false tags: [\u0026lsquo;cybersecurity\u0026rsquo;, \u0026rsquo;networking\u0026rsquo;, \u0026lsquo;security\u0026rsquo;, \u0026lsquo;ports\u0026rsquo;, \u0026lsquo;infrastructure\u0026rsquo;, \u0026lsquo;best-practices\u0026rsquo;] Najczęściej Atakowane Porty Sieciowe - Kompleksowy Przewodnik Bezpieczeństwa Wprowadzenie Bezpieczeństwo sieciowe stanowi fundament współczesnej infrastruktury IT. W czasach, gdy cyberataki stają się coraz bardziej wyrafinowane, zrozumienie potencjalnych wektorów ataku jest kluczowe dla każdego administratora systemu i specjalisty ds. bezpieczeństwa. W tym kompleksowym przewodniku przyjrzymy się szczegółowo najczęściej atakowanym portom sieciowym, metodom ataków oraz strategiom obrony.\nAnatomia Ataków na Porty Sieciowe Porty Związane z Transferem Plików Port 21 (FTP) Charakterystyka: Standardowy port dla protokołu FTP Główne zagrożenia: Przechwytywanie danych logowania Man-in-the-middle attacks Ataki brute force na hasła Directory traversal attacks Rekomendowane zabezpieczenia: Migracja na SFTP (Port 22) lub FTPS Implementacja silnych polityk haseł Ograniczenie dostępu do określonych adresów IP Monitoring prób nieudanego logowania Port 69 (TFTP) Charakterystyka: Uproszczony protokół transferu plików Zagrożenia: Brak mechanizmów uwierzytelniania Możliwość nieuprawnionego dostępu do plików Podatność na ataki typu buffer overflow Zabezpieczenia: Unikanie używania TFTP w środowisku produkcyjnym Ścisłe ograniczenie dostępu przez firewall Implementacja VLAN dla izolacji ruchu TFTP Porty Dostępu Zdalnego Port 22 (SSH) Charakterystyka: Podstawowy protokół bezpiecznego dostępu zdalnego Typowe wektory ataku: Ataki brute force Wykorzystanie słabych kluczy SSH Próby exploitacji znanych podatności w implementacjach SSH Zaawansowane zabezpieczenia: Implementacja fail2ban Wykorzystanie kluczy SSH zamiast haseł Regularna rotacja kluczy Monitoring nietypowych wzorców dostępu Ograniczenie listy dozwolonych algorytmów szyfrowania Port 23 (Telnet) Charakterystyka: Przestarzały protokół dostępu zdalnego Krytyczne zagrożenia: Brak szyfrowania komunikacji Podatność na podsłuchiwanie Łatwość przechwycenia danych uwierzytelniających Zalecenia bezpieczeństwa: Całkowite wyłączenie usługi Telnet Migracja na SSH Wdrożenie polityk bezpieczeństwa zabraniających używania Telnet Porty Komunikacyjne Port 25 (SMTP) Charakterystyka: Podstawowy port dla przesyłania poczty e-mail Współczesne zagrożenia: Spam relay Email spoofing Ataki typu backscatter Malware distribution Zaawansowana ochrona: Implementacja SPF, DKIM i DMARC Filtrowanie ruchu SMTP Monitoring reputacji IP Wdrożenie systemu anty-spamowego Regularne audyty logów SMTP Port 53 (DNS) Charakterystyka: Kluczowy port dla resolucji nazw domenowych Współczesne metody ataków: DNS cache poisoning DNS amplification attacks DNS tunneling Fast-flux DNS Kompleksowa ochrona: Implementacja DNSSEC Monitoring anomalii w ruchu DNS Rate limiting zapytań DNS Separacja serwerów rekurencyjnych i autorytatywnych Regularne aktualizacje oprogramowania DNS Porty Webowe Port 80 (HTTP) i 443 (HTTPS) Charakterystyka: Standardowe porty dla ruchu webowego Zaawansowane wektory ataków: SQL Injection Cross-Site Scripting (XSS) DDoS attacks SSL/TLS vulnerabilities Web application vulnerabilities Wielowarstwowa ochrona: Implementacja WAF (Web Application Firewall) Automatyczne przekierowanie HTTP na HTTPS Regularne testy penetracyjne Content Security Policy (CSP) Monitoring ruchu w czasie rzeczywistym Porty 8080 i 8443 Charakterystyka: Alternatywne porty dla serwerów WWW Specyficzne zagrożenia: Backdoor attempts Proxy abuse Service exploitation Dedykowane zabezpieczenia: Strict access control SSL/TLS encryption Regular security audits Traffic anomaly detection Porty Systemu Windows Port 135 (RPC) Charakterystyka: Windows Remote Procedure Call Typowe ataki: Buffer overflow exploits Remote code execution Service enumeration Specjalistyczne zabezpieczenia: Ścisła kontrola dostępu Monitoring aktywności RPC Regularne patche bezpieczeństwa Segmentacja sieci Porty 137-139 (NetBIOS) Charakterystyka: Legacy Windows networking Zagrożenia: Information leakage Network enumeration SMB attacks Rekomendowane działania: Disable if not needed Strict firewall rules Regular security assessments Network segmentation Zaawansowane Strategie Ochrony 1. Monitoring i Analiza Ruchu Implementacja systemów IDS/IPS Analiza behawioralna ruchu sieciowego Machine learning dla detekcji anomalii Regularne audyty bezpieczeństwa Monitoring w czasie rzeczywistym 2. Zarządzanie Podatnościami Regularne skanowanie portów Vulnerability assessment Patch management Configuration management Risk assessment 3. Segmentacja Sieci Implementacja VLAN Network zoning Micro-segmentation Zero trust architecture Access control lists 4. Incident Response Przygotowanie planów reakcji Zespół reagowania na incydenty Procedury eskalacji Dokumentacja incydentów Lessons learned process Najlepsze Praktyki dla Administratorów Codzienna Administracja Monitoring Systemu\nRegularne sprawdzanie logów Analiza wzorców ruchu Weryfikacja uprawnień Kontrola dostępu Zarządzanie Konfiguracją\nDokumentacja zmian Version control Change management Configuration backups Aktualizacje i Patche\nRegular updates Security patches Firmware updates Testing procedures Długoterminowe Planowanie Strategia Bezpieczeństwa\nRisk assessment Security roadmap Budget planning Training programs Disaster Recovery\nBackup procedures Recovery testing Business continuity Emergency protocols Narzędzia i Technologie Essential Security Tools Network Monitoring\nWireshark Nagios PRTG Zabbix Security Testing\nNmap Metasploit Nessus OpenVAS Log Management\nELK Stack Splunk Graylog Logstash Podsumowanie Bezpieczeństwo portów sieciowych wymaga kompleksowego podejścia, łączącego:\nZrozumienie zagrożeń Implementację zabezpieczeń Regularne audyty Monitoring i reakcję na incydenty Ciągłe doskonalenie procedur Pamiętaj, że bezpieczeństwo to proces, nie produkt. Wymaga ciągłej uwagi, aktualizacji i dostosowywania do nowych zagrożeń.\n","permalink":"//localhost:1313/publications/najczesciej-atakowane-porty/","summary":"\u003chr\u003e\n\u003ch2 id=\"tags-cybersecurity-networking-security-ports-infrastructure-best-practices\"\u003etitle: \u0026lsquo;Najczęściej Atakowane Porty Sieciowe - Kompleksowy Przewodnik Bezpieczeństwa\u0026rsquo;\ndate: 2025-02-10\ndraft: false\ntags: [\u0026lsquo;cybersecurity\u0026rsquo;, \u0026rsquo;networking\u0026rsquo;, \u0026lsquo;security\u0026rsquo;, \u0026lsquo;ports\u0026rsquo;, \u0026lsquo;infrastructure\u0026rsquo;, \u0026lsquo;best-practices\u0026rsquo;]\u003c/h2\u003e\n\u003ch1 id=\"najczęściej-atakowane-porty-sieciowe---kompleksowy-przewodnik-bezpieczeństwa\"\u003eNajczęściej Atakowane Porty Sieciowe - Kompleksowy Przewodnik Bezpieczeństwa\u003c/h1\u003e\n\u003ch2 id=\"wprowadzenie\"\u003eWprowadzenie\u003c/h2\u003e\n\u003cp\u003eBezpieczeństwo sieciowe stanowi fundament współczesnej infrastruktury IT. W czasach, gdy cyberataki stają się coraz bardziej wyrafinowane, zrozumienie potencjalnych wektorów ataku jest kluczowe dla każdego administratora systemu i specjalisty ds. bezpieczeństwa. W tym kompleksowym przewodniku przyjrzymy się szczegółowo najczęściej atakowanym portom sieciowym, metodom ataków oraz strategiom obrony.\u003c/p\u003e","title":"Najczęściej Atakowane Porty Sieciowe - Co Powinieneś Wiedzieć"},{"content":"SELinux - Kompleksowy przewodnik Spis treści Wprowadzenie do SELinux Architektura SELinux Tryby pracy Konteksty bezpieczeństwa Polityki SELinux Podstawowe komendy Booleany Rozwiązywanie problemów Najlepsze praktyki Wprowadzenie do SELinux Security-Enhanced Linux (SELinux) to zaawansowany system kontroli dostępu (MAC - Mandatory Access Control) zaimplementowany w jądrze Linux. Został pierwotnie opracowany przez NSA i później zintegrowany z wieloma dystrybucjami Linux.\nGłówne cechy: Kontrola dostępu na poziomie jądra systemu Szczegółowa polityka bezpieczeństwa Ochrona przed eskalacją uprawnień Izolacja procesów i usług Minimalizacja potencjalnych zagrożeń Architektura SELinux SELinux działa na zasadzie etykietowania (labeling) wszystkich obiektów w systemie i kontrolowania dostępu między nimi na podstawie zdefiniowanych reguł.\nKomponenty: Kernel SELinux Polityki bezpieczeństwa Narzędzia użytkownika System logowania # Sprawdzenie czy SELinux jest zainstalowany rpm -qa | grep selinux Tryby pracy SELinux może działać w trzech trybach, które określają jak system reaguje na naruszenia polityki.\n1. Enforcing Polityka jest aktywnie egzekwowana Naruszenia są blokowane i logowane Zalecany w środowisku produkcyjnym # Włączenie trybu Enforcing sudo setenforce 1 2. Permissive Polityka nie jest egzekwowana Naruszenia są tylko logowane Przydatny do debugowania i testowania # Włączenie trybu Permissive sudo setenforce 0 3. Disabled SELinux jest całkowicie wyłączony Brak kontroli dostępu Niezalecany w produkcji # Sprawdzenie aktualnego trybu sestatus Konteksty bezpieczeństwa Każdy obiekt w systemie (pliki, procesy, porty) posiada kontekst bezpieczeństwa składający się z czterech elementów:\nFormat kontekstu: user:role:type:level user: Tożsamość SELinux role: Przypisana rola w systemie type: Typ obiektu lub domeny level: Poziom bezpieczeństwa (używany w MLS) # Sprawdzenie kontekstu pliku ls -Z /ścieżka/do/pliku # Sprawdzenie kontekstu procesu ps auxZ | grep httpd Zarządzanie kontekstami: # Zmiana kontekstu pliku sudo chcon -t httpd_sys_content_t /var/www/html/index.html # Przywrócenie domyślnego kontekstu sudo restorecon -Rv /var/www/html/ # Dodanie reguły trwałej sudo semanage fcontext -a -t httpd_sys_content_t \u0026#34;/var/www/custom(/.*)?\u0026#34; Polityki SELinux SELinux oferuje różne typy polityk dostosowane do różnych przypadków użycia.\nTargeted (domyślna) Chroni tylko wybrane usługi systemowe Najprostsza w konfiguracji Zalecana dla większości przypadków MLS (Multi-Level Security) Zaawansowana kontrola dostępu Używana w środowiskach o wysokich wymaganiach bezpieczeństwa Wymaga szczegółowej konfiguracji # Sprawdzenie aktywnej polityki sestatus | grep \u0026#34;Loaded policy\u0026#34; # Lista dostępnych polityk semodule -l Podstawowe komendy Sprawdzanie statusu i konfiguracji: # Status SELinux sestatus # Aktywne porty semanage port -l # Lista modułów polityki semodule -l Zarządzanie kontekstami: # Zmiana kontekstu chcon -t httpd_sys_content_t plik.html # Przywracanie domyślnych kontekstów restorecon -Rv /ścieżka # Dodawanie reguł trwałych semanage fcontext -a -t httpd_sys_content_t \u0026#34;/custom/path(/.*)?\u0026#34; Booleany Booleany to przełączniki umożliwiające szybką modyfikację zachowania polityki SELinux.\n# Lista wszystkich booleanów getsebool -a # Sprawdzenie konkretnego booleana getsebool httpd_enable_homedirs # Włączenie booleana (tymczasowo) setsebool httpd_enable_homedirs on # Włączenie booleana (trwale) setsebool -P httpd_enable_homedirs on Popularne booleany: httpd_enable_homedirs: Dostęp Apache do katalogów domowych ftpd_anon_write: Zapis przez anonimowego FTP httpd_can_network_connect: Połączenia sieciowe dla Apache Rozwiązywanie problemów Analiza logów: # Przeszukiwanie logów audytu ausearch -m AVC -ts recent # Analiza naruszeń audit2why \u0026lt; /var/log/audit/audit.log # Generowanie modułu polityki audit2allow -a -M mymodule Typowe problemy: Nieprawidłowe konteksty plików Brakujące porty w polityce Wymagane booleany są wyłączone Konflikty z innymi mechanizmami bezpieczeństwa Rozwiązywanie: # Sprawdzenie kontekstów ls -Z # Dodanie portu semanage port -a -t http_port_t -p tcp 8080 # Włączenie wymaganego booleana setsebool -P httpd_can_network_connect on Najlepsze praktyki Używaj trybu Enforcing\nZawsze w środowisku produkcyjnym Permissive tylko do debugowania Regularnie monitoruj logi\nausearch -m AVC -ts recent Twórz własne moduły polityki\naudit2allow -a -M custom_policy semodule -i custom_policy.pp Dokumentuj zmiany\nZapisuj wszystkie modyfikacje kontekstów Przechowuj listę własnych modułów polityki Automatyzuj zarządzanie\nUżywaj narzędzi do zarządzania konfiguracją Twórz skrypty do typowych operacji Regularne aktualizacje\n# Aktualizacja polityk yum update selinux-policy Przykładowa automatyzacja: #!/bin/bash # Skrypt do konfiguracji kontekstów dla nowej aplikacji web # Ustawienie kontekstów semanage fcontext -a -t httpd_sys_content_t \u0026#34;/var/www/app(/.*)?\u0026#34; restorecon -Rv /var/www/app # Włączenie wymaganych booleanów setsebool -P httpd_can_network_connect on setsebool -P httpd_can_network_connect_db on # Sprawdzenie konfiguracji sestatus getsebool -a | grep httpd ls -Z /var/www/app ","permalink":"//localhost:1313/posts/projects/selinux/","summary":"\u003ch1 id=\"selinux---kompleksowy-przewodnik\"\u003eSELinux - Kompleksowy przewodnik\u003c/h1\u003e\n\u003ch2 id=\"spis-treści\"\u003eSpis treści\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#wprowadzenie-do-selinux\"\u003eWprowadzenie do SELinux\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#architektura-selinux\"\u003eArchitektura SELinux\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#tryby-pracy\"\u003eTryby pracy\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#konteksty-bezpiecze%C5%84stwa\"\u003eKonteksty bezpieczeństwa\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#polityki-selinux\"\u003ePolityki SELinux\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#podstawowe-komendy\"\u003ePodstawowe komendy\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#booleany\"\u003eBooleany\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#rozwi%C4%85zywanie-problem%C3%B3w\"\u003eRozwiązywanie problemów\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#najlepsze-praktyki\"\u003eNajlepsze praktyki\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"wprowadzenie-do-selinux\"\u003eWprowadzenie do SELinux\u003c/h2\u003e\n\u003cp\u003eSecurity-Enhanced Linux (SELinux) to zaawansowany system kontroli dostępu (MAC - Mandatory Access Control) zaimplementowany w jądrze Linux. Został pierwotnie opracowany przez NSA i później zintegrowany z wieloma dystrybucjami Linux.\u003c/p\u003e\n\u003ch3 id=\"główne-cechy\"\u003eGłówne cechy:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eKontrola dostępu na poziomie jądra systemu\u003c/li\u003e\n\u003cli\u003eSzczegółowa polityka bezpieczeństwa\u003c/li\u003e\n\u003cli\u003eOchrona przed eskalacją uprawnień\u003c/li\u003e\n\u003cli\u003eIzolacja procesów i usług\u003c/li\u003e\n\u003cli\u003eMinimalizacja potencjalnych zagrożeń\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"architektura-selinux\"\u003eArchitektura SELinux\u003c/h2\u003e\n\u003cp\u003eSELinux działa na zasadzie etykietowania (labeling) wszystkich obiektów w systemie i kontrolowania dostępu między nimi na podstawie zdefiniowanych reguł.\u003c/p\u003e","title":"SElinux-Wprowadzenie"},{"content":"Instalacja Wazuh - kompletny przewodnik dla początkujących Cześć! W dzisiejszym wpisie przeprowadzę Cię przez proces instalacji Wazuh - potężnego narzędzia do monitorowania bezpieczeństwa. Niezależnie od tego, czy zabezpieczasz małą firmę czy własne projekty, Wazuh może znacząco poprawić Twoje bezpieczeństwo IT.\nCo to jest Wazuh? Wazuh to wszechstronne narzędzie open-source, które łączy w sobie:\nMonitoring bezpieczeństwa w czasie rzeczywistym Wykrywanie włamań Monitorowanie integralności plików Reagowanie na zagrożenia Zgodność z przepisami (GDPR, PCI DSS) Wymagania systemowe Zanim zaczniemy, upewnij się, że Twój serwer spełnia minimalne wymagania:\nDla serwera Wazuh: CPU: minimum 4 rdzenie RAM: minimum 8GB (zalecane 16GB) Dysk: minimum 50GB (zalecane 100GB) System: Ubuntu 22.04 LTS (zalecany) Dla agentów Wazuh: CPU: 2 rdzenie RAM: 2GB Dysk: 20GB Wspierane systemy: Linux, Windows, macOS Krok 1: Przygotowanie systemu Najpierw zaktualizujmy system i skonfigurujmy podstawowe zabezpieczenia:\n# Aktualizacja systemu sudo apt update \u0026amp;\u0026amp; sudo apt upgrade -y # Konfiguracja firewalla sudo ufw allow 1514/tcp # Komunikacja agent-server sudo ufw allow 1515/tcp # Rejestracja agentów sudo ufw allow 443/tcp # Panel webowy sudo ufw enable Krok 2: Instalacja serwera Wazuh Teraz przechodzimy do właściwej instalacji:\n# Pobieranie instalatora curl -sO https://packages.wazuh.com/4.7/wazuh-install.sh # Uruchomienie instalacji (opcja -a instaluje wszystkie komponenty) sudo bash ./wazuh-install.sh -a Po instalacji sprawdź, czy wszystkie usługi działają poprawnie:\nsudo systemctl status wazuh-manager sudo systemctl status wazuh-indexer sudo systemctl status wazuh-dashboard Krok 3: Instalacja agentów Dla Ubuntu/Debian: wget https://packages.wazuh.com/4.x/apt/pool/main/w/wazuh-agent/wazuh-agent_4.7.5-1_amd64.deb sudo WAZUH_MANAGER=\u0026#39;ip_twojego_serwera\u0026#39; WAZUH_AGENT_NAME=\u0026#39;nazwa_hosta\u0026#39; dpkg -i ./wazuh-agent_4.7.5-1_amd64.deb sudo systemctl start wazuh-agent Dla Windows: Pobierz instalator ze strony Wazuh Uruchom instalator jako administrator Podaj adres IP serwera Wazuh podczas instalacji Krok 4: Podstawowa konfiguracja Główny plik konfiguracyjny serwera znajduje się w /var/ossec/etc/ossec.conf. Oto przykładowa podstawowa konfiguracja:\n\u0026lt;ossec_config\u0026gt; \u0026lt;global\u0026gt; \u0026lt;email_notification\u0026gt;yes\u0026lt;/email_notification\u0026gt; \u0026lt;email_to\u0026gt;twoj@email.com\u0026lt;/email_to\u0026gt; \u0026lt;smtp_server\u0026gt;smtp.twojserwer.com\u0026lt;/smtp_server\u0026gt; \u0026lt;email_from\u0026gt;wazuh@twojadomena.com\u0026lt;/email_from\u0026gt; \u0026lt;/global\u0026gt; \u0026lt;syscheck\u0026gt; \u0026lt;frequency\u0026gt;43200\u0026lt;/frequency\u0026gt; \u0026lt;directories check_all=\u0026#34;yes\u0026#34;\u0026gt;/etc,/usr/bin,/usr/sbin\u0026lt;/directories\u0026gt; \u0026lt;directories check_all=\u0026#34;yes\u0026#34;\u0026gt;/var/www,/var/lib\u0026lt;/directories\u0026gt; \u0026lt;/syscheck\u0026gt; \u0026lt;/ossec_config\u0026gt; Krok 5: Pierwsze logowanie Otwórz przeglądarkę i przejdź do https://ip_twojego_serwera Zaloguj się używając domyślnych danych (znajdziesz je w /var/ossec/etc/wazuh-dashboard/credentials.txt) Zmień hasło przy pierwszym logowaniu Najczęstsze problemy i rozwiązania Problem z połączeniem agenta: # Sprawdź status agenta sudo systemctl status wazuh-agent # Sprawdź logi tail -f /var/ossec/logs/ossec.log Problemy z serwerem: # Weryfikacja statusu sudo systemctl status wazuh-manager # Sprawdzenie logów tail -f /var/ossec/logs/ossec.log Co dalej? Po podstawowej instalacji warto: 9. Skonfigurować dodatkowe reguły monitorowania 10. Ustawić powiadomienia (np. przez Slack lub email) 11. Skonfigurować regular backups 12. Dostosować dashboardy do swoich potrzeb\nWskazówki bezpieczeństwa Regularnie aktualizuj system i komponenty Wazuh Zmień domyślne hasła Ogranicz dostęp do panelu administracyjnego Włącz uwierzytelnianie dwuskładnikowe Regularnie twórz kopie zapasowe konfiguracji Przydatne linki Oficjalna dokumentacja Wazuh Forum społeczności Wazuh GitHub Wazuh Mam nadzieję, że ten przewodnik pomoże Ci w sprawnej instalacji Wazuh! Jeśli masz pytania, zostaw komentarz poniżej.\nOstatnia aktualizacja: Luty 2025\n","permalink":"//localhost:1313/posts/projects/wazuh/","summary":"\u003ch1 id=\"instalacja-wazuh---kompletny-przewodnik-dla-początkujących\"\u003eInstalacja Wazuh - kompletny przewodnik dla początkujących\u003c/h1\u003e\n\u003cp\u003eCześć! W dzisiejszym wpisie przeprowadzę Cię przez proces instalacji Wazuh - potężnego narzędzia do monitorowania bezpieczeństwa. Niezależnie od tego, czy zabezpieczasz małą firmę czy własne projekty, Wazuh może znacząco poprawić Twoje bezpieczeństwo IT.\u003c/p\u003e\n\u003ch2 id=\"co-to-jest-wazuh\"\u003eCo to jest Wazuh?\u003c/h2\u003e\n\u003cp\u003eWazuh to wszechstronne narzędzie open-source, które łączy w sobie:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMonitoring bezpieczeństwa w czasie rzeczywistym\u003c/li\u003e\n\u003cli\u003eWykrywanie włamań\u003c/li\u003e\n\u003cli\u003eMonitorowanie integralności plików\u003c/li\u003e\n\u003cli\u003eReagowanie na zagrożenia\u003c/li\u003e\n\u003cli\u003eZgodność z przepisami (GDPR, PCI DSS)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"wymagania-systemowe\"\u003eWymagania systemowe\u003c/h2\u003e\n\u003cp\u003eZanim zaczniemy, upewnij się, że Twój serwer spełnia minimalne wymagania:\u003c/p\u003e","title":"Wazuh"},{"content":"Przewodnik Konfiguracji Lokalnego Serwera DNS BIND Ten przewodnik pomoże Ci skonfigurować lokalny serwer DNS przy użyciu BIND9 do obsługi własnej domeny (np. mydomain.local) z obsługą rozwiązywania nazw w przód i wstecz.\nWymagania wstępne System Ubuntu/Debian\nDostęp root lub sudo\nPodstawowa znajomość koncepcji DNS\nInstalacja Zaktualizuj system i zainstaluj BIND9:\nsudo apt update sudo apt upgrade -y sudo apt install bind9 bind9utils bind9-doc -y Sprawdź status usługi BIND:\nsudo systemctl status bind9 Konfiguracja 1. Konfiguracja stref lokalnych Edytuj plik konfiguracji lokalnej:\nsudo nano /etc/bind/named.conf.local Dodaj następujące konfiguracje stref:\nzone \u0026#34;mydomain.local\u0026#34; { type master; file \u0026#34;/etc/bind/zones/mydomain.local.zone\u0026#34;; }; zone \u0026#34;0.0.127.in-addr.arpa\u0026#34; { type master; file \u0026#34;/etc/bind/zones/reverse.local.zone\u0026#34;; }; 2. Tworzenie plików stref Utwórz katalog na strefy:\nsudo mkdir -p /etc/bind/zones Plik strefy prostej (forward) Utwórz i edytuj plik strefy prostej:\nsudo nano /etc/bind/zones/mydomain.local.zone Dodaj następującą konfigurację:\n$TTL 86400 @ IN SOA ns1.mydomain.local. admin.mydomain.local. ( 2025011401 ; Numer seryjny 3600 ; Odświeżanie 1800 ; Ponawianie 1209600 ; Wygaśnięcie 86400 ) ; Minimalny TTL @ IN NS ns1.mydomain.local. @ IN A 127.0.0.1 ns1 IN A 127.0.0.1 www IN A 127.0.0.1 app IN A 127.0.0.2 Plik strefy odwrotnej (reverse) Utwórz i edytuj plik strefy odwrotnej:\nsudo nano /etc/bind/zones/reverse.local.zone Dodaj następującą konfigurację:\n$TTL 86400 @ IN SOA ns1.mydomain.local. admin.mydomain.local. ( 2025011401 ; Numer seryjny 3600 ; Odświeżanie 1800 ; Ponawianie 1209600 ; Wygaśnięcie 86400 ) ; Minimalny TTL @ IN NS ns1.mydomain.local. 1 IN PTR ns1.mydomain.local. 1 IN PTR www.mydomain.local. 2 IN PTR app.mydomain.local. 3. Konfiguracja opcji BIND Edytuj plik opcji:\nsudo nano /etc/bind/named.conf.options Dodaj następującą konfigurację:\noptions { directory \u0026#34;/var/cache/bind\u0026#34;; recursion yes; allow-query { localhost; }; forwarders { 8.8.8.8; // DNS Google 1.1.1.1; // DNS Cloudflare }; dnssec-validation auto; listen-on { 127.0.0.1; }; listen-on-v6 { ::1; }; }; Weryfikacja i testowanie 1. Sprawdź składnię konfiguracji sudo named-checkconf sudo named-checkzone mydomain.local /etc/bind/zones/mydomain.local.zone sudo named-checkzone 0.0.127.in-addr.arpa /etc/bind/zones/reverse.local.zone 2. Zrestartuj usługę BIND sudo systemctl restart bind9 3. Przetestuj rozwiązywanie DNS Test wyszukiwania do przodu:\ndig @127.0.0.1 www.mydomain.local Test wyszukiwania wstecznego:\ndig -x 127.0.0.1 @127.0.0.1 Rozwiązywanie problemów Sprawdź logi BIND: sudo tail -f /var/log/syslog | grep named Sprawdź status usługi: sudo systemctl status bind9 Sprawdź uprawnienia plików stref: sudo ls -l /etc/bind/zones/ Typowe problemy Usługa nie uruchamia się: Sprawdź błędy składni w plikach konfiguracyjnych\nRozwiązywanie DNS nie działa: Sprawdź ustawienia zapory sieciowej i adresy nasłuchiwania BIND\nProblemy z transferem stref: Sprawdź uprawnienia plików i składnię plików stref\nAspekty bezpieczeństwa Ogranicz transfery stref do zaufanych serwerów\nSkonfiguruj odpowiednie listy kontroli dostępu w allow-query\nAktualizuj BIND o najnowsze poprawki bezpieczeństwa\nUżyj DNSSEC dla zwiększonego bezpieczeństwa\nDodatkowe źródła Dokumentacja BIND\nPrzewodnik BIND dla Ubuntu\n","permalink":"//localhost:1313/posts/projects/instalacja_bind/","summary":"\u003ch1 id=\"przewodnik-konfiguracji-lokalnego-serwera-dns-bind\"\u003ePrzewodnik Konfiguracji Lokalnego Serwera DNS BIND\u003c/h1\u003e\n\u003cp\u003eTen przewodnik pomoże Ci skonfigurować lokalny serwer DNS przy użyciu BIND9 do obsługi własnej domeny (np. mydomain.local) z obsługą rozwiązywania nazw w przód i wstecz.\u003c/p\u003e\n\u003ch2 id=\"wymagania-wstępne\"\u003eWymagania wstępne\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eSystem Ubuntu/Debian\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDostęp root lub sudo\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePodstawowa znajomość koncepcji DNS\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"instalacja\"\u003eInstalacja\u003c/h2\u003e\n\u003cp\u003eZaktualizuj system i zainstaluj BIND9:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo apt update\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo apt upgrade -y\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo apt install bind9 bind9utils bind9-doc -y\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSprawdź status usługi BIND:\u003c/p\u003e","title":"Instalacja Bind"},{"content":"Konfiguracja Split-Horizon DNS na CentOS/AlmaLinux Ten poradnik przeprowadzi Cię przez proces konfiguracji Split-Horizon DNS przy użyciu BIND na systemach CentOS lub AlmaLinux. Split-Horizon DNS pozwala serwerowi DNS zwracać różne rekordy w zależności od źródła zapytania (sieć wewnętrzna vs zewnętrzna).\n1. Wymagania wstępne CentOS, AlmaLinux lub RedHat z dostępem root lub sudo Zainstalowany BIND (bind i bind-utils) 2. Instalacja BIND sudo dnf install bind bind-utils -y 3. Przygotowanie plików stref Utworzenie katalogu stref:\nsudo mkdir -p /etc/named/zones Plik strefy wewnętrznej Utwórz plik /etc/named/zones/internal.example.com.zone:\n$TTL 86400\r@ IN SOA ns1.example.com. admin.example.com. (\r2025011501 ; Numer seryjny\r3600 ; Odświeżanie\r1800 ; Ponawianie\r1209600 ; Wygaśnięcie\r86400 ) ; Minimalny TTL\r@ IN NS ns1.example.com.\rns1 IN A 192.168.1.1\rwww IN A 192.168.1.2\rmail IN A 192.168.1.3 Plik strefy zewnętrznej Utwórz plik /etc/named/zones/external.example.com.zone:\n$TTL 86400\r@ IN SOA ns1.example.com. admin.example.com. (\r2025011501 ; Numer seryjny\r3600 ; Odświeżanie\r1800 ; Ponawianie\r1209600 ; Wygaśnięcie\r86400 ) ; Minimalny TTL\r@ IN NS ns1.example.com.\rns1 IN A 203.0.113.1\rwww IN A 203.0.113.2\rmail IN A 203.0.113.3 4. Konfiguracja BIND Edytuj plik /etc/named.conf aby zdefiniować widoki dla zapytań wewnętrznych i zewnętrznych.\nWidok wewnętrzny view \u0026#34;internal\u0026#34; {\rmatch-clients { 192.168.1.0/24; localhost; }; // Sieć wewnętrzna\rzone \u0026#34;example.com\u0026#34; {\rtype master;\rfile \u0026#34;/etc/named/zones/internal.example.com.zone\u0026#34;;\r};\r}; Widok zewnętrzny view \u0026#34;external\u0026#34; {\rmatch-clients { any; }; // Wszystkie pozostałe źródła\rzone \u0026#34;example.com\u0026#34; {\rtype master;\rfile \u0026#34;/etc/named/zones/external.example.com.zone\u0026#34;;\r};\r}; 5. Walidacja konfiguracji Sprawdź plik konfiguracyjny:\nsudo named-checkconf Sprawdź pliki stref:\nsudo named-checkzone example.com /etc/named/zones/internal.example.com.zone sudo named-checkzone example.com /etc/named/zones/external.example.com.zone 6. Restart BIND Włącz i zrestartuj usługę BIND:\nsudo systemctl enable named sudo systemctl restart named Sprawdź status:\nsudo systemctl status named 7. Konfiguracja firewalla Zezwól na ruch DNS przez firewall:\nsudo firewall-cmd --permanent --add-service=dns sudo firewall-cmd --reload 8. Testowanie Test sieci wewnętrznej Uruchom to polecenie z maszyny w sieci wewnętrznej:\ndig @localhost www.example.com Oczekiwany wynik: IP z internal.example.com.zone (np. 192.168.1.2)\nTest sieci zewnętrznej Uruchom to polecenie z maszyny zewnętrznej:\ndig @\u0026lt;PUBLICZNE_IP_SERWERA_BIND\u0026gt; www.example.com Oczekiwany wynik: IP z external.example.com.zone (np. 203.0.113.2)\n9. Opcjonalnie: Włączenie logowania Dodaj konfigurację logowania Edytuj /etc/named.conf aby dodać logowanie:\nlogging {\rchannel query_log {\rfile \u0026#34;/var/log/named_queries.log\u0026#34;;\rseverity dynamic;\r};\rcategory queries { query_log; };\r}; Utwórz plik logów sudo touch /var/log/named_queries.log sudo chmod 640 /var/log/named_queries.log sudo chown named:named /var/log/named_queries.log Zrestartuj BIND sudo systemctl restart named Serwer Split-Horizon DNS jest teraz skonfigurowany i gotowy do użycia. W przypadku problemów, sprawdź dokładnie pliki konfiguracyjne i logi w celu rozwiązania problemów.\nPorady dotyczące rozwiązywania problemów Sprawdź status usługi BIND używając systemctl status named Przejrzyj logi systemowe: journalctl -u named Upewnij się, że porty są otwarte: netstat -tulpn | grep named Sprawdź uprawnienia do plików konfiguracyjnych ","permalink":"//localhost:1313/posts/projects/splithorizon/","summary":"\u003ch1 id=\"konfiguracja-split-horizon-dns-na-centosalmalinux\"\u003eKonfiguracja Split-Horizon DNS na CentOS/AlmaLinux\u003c/h1\u003e\n\u003cp\u003eTen poradnik przeprowadzi Cię przez proces konfiguracji Split-Horizon DNS przy użyciu BIND na systemach CentOS lub AlmaLinux. Split-Horizon DNS pozwala serwerowi DNS zwracać różne rekordy w zależności od źródła zapytania (sieć wewnętrzna vs zewnętrzna).\u003c/p\u003e\n\u003ch2 id=\"1-wymagania-wstępne\"\u003e1. Wymagania wstępne\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eCentOS, AlmaLinux lub RedHat z dostępem root lub sudo\u003c/li\u003e\n\u003cli\u003eZainstalowany BIND (\u003ccode\u003ebind\u003c/code\u003e i \u003ccode\u003ebind-utils\u003c/code\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2-instalacja-bind\"\u003e2. Instalacja BIND\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo dnf install \u003cspan class=\"nb\"\u003ebind\u003c/span\u003e bind-utils -y\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"3-przygotowanie-plików-stref\"\u003e3. Przygotowanie plików stref\u003c/h2\u003e\n\u003cp\u003eUtworzenie katalogu stref:\u003c/p\u003e","title":"Split-HorizonDNS"},{"content":"Przewodnik Instalacji Dockera Docker to platforma konteneryzacji, która umożliwia uruchamianie aplikacji w lekkich, izolowanych środowiskach. Poniżej znajdziesz instrukcje instalacji dla różnych dystrybucji Linuxa.\n1. Ubuntu/Debian Aktualizacja systemu:\nsudo apt update \u0026amp;\u0026amp; sudo apt upgrade -y Instalacja wymaganych pakietów:\nsudo apt install -y curl apt-transport-https ca-certificates software-properties-common Dodanie repozytorium Dockera:\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo \u0026#34;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\u0026#34; | sudo tee /etc/apt/sources.list.d/docker.list Instalacja Dockera:\nsudo apt update sudo apt install -y docker-ce docker-ce-cli containerd.io Włączenie i uruchomienie Dockera:\nsudo systemctl enable docker sudo systemctl start docker Weryfikacja instalacji:\nsudo docker run hello-world 2. Red Hat/CentOS Aktualizacja systemu:\nsudo yum update -y Dodanie repozytorium Dockera:\nsudo yum install -y yum-utils sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo Instalacja Dockera:\nsudo yum install -y docker-ce docker-ce-cli containerd.io Włączenie i uruchomienie Dockera:\nsudo systemctl enable docker sudo systemctl start docker Weryfikacja instalacji:\nsudo docker run hello-world 3. Fedora Aktualizacja systemu:\nsudo dnf update -y Dodanie repozytorium Dockera:\nsudo dnf install -y dnf-plugins-core sudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo Instalacja Dockera:\nsudo dnf install -y docker-ce docker-ce-cli containerd.io Włączenie i uruchomienie Dockera:\nsudo systemctl enable docker sudo systemctl start docker Weryfikacja instalacji:\nsudo docker run hello-world 4. Arch Linux Aktualizacja systemu:\nsudo pacman -Syu Instalacja Dockera:\nsudo pacman -S docker Włączenie i uruchomienie Dockera:\nsudo systemctl enable docker sudo systemctl start docker Dodanie użytkownika do grupy Docker (opcjonalne):\nsudo usermod -aG docker $USER Weryfikacja instalacji:\nsudo docker run hello-world Uwagi Oficjalna dokumentacja:\nUbuntu/Debian Red Hat/CentOS Fedora Arch Linux Upewnij się, że Twoja dystrybucja Linuxa wspiera wymaganą wersję jądra.\nDocker jest teraz gotowy do użycia! 🚀\n","permalink":"//localhost:1313/posts/projects/docker/","summary":"\u003ch1 id=\"przewodnik-instalacji-dockera\"\u003ePrzewodnik Instalacji Dockera\u003c/h1\u003e\n\u003cp\u003eDocker to platforma konteneryzacji, która umożliwia uruchamianie aplikacji w lekkich, izolowanych środowiskach. Poniżej znajdziesz instrukcje instalacji dla różnych dystrybucji Linuxa.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"1-ubuntudebian\"\u003e1. Ubuntu/Debian\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eAktualizacja systemu\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo apt update \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e sudo apt upgrade -y\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eInstalacja wymaganych pakietów\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo apt install -y curl apt-transport-https ca-certificates software-properties-common\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eDodanie repozytorium Dockera\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecurl -fsSL https://download.docker.com/linux/ubuntu/gpg \u003cspan class=\"p\"\u003e|\u003c/span\u003e sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \u003c/span\u003e\u003cspan class=\"k\"\u003e$(\u003c/span\u003elsb_release -cs\u003cspan class=\"k\"\u003e)\u003c/span\u003e\u003cspan class=\"s2\"\u003e stable\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e sudo tee /etc/apt/sources.list.d/docker.list\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eInstalacja Dockera\u003c/strong\u003e:\u003c/p\u003e","title":"Instalacja Docker"},{"content":"Cześć! 👋 Jestem administratorem systemów Linux z doświadczeniem w zarządzaniu narzędziami CI/CD, kontenerami Docker oraz wirtualizacją (Proxmox, VMware). Posiadam także praktyczną wiedzę w zakresie platform chmurowych, takich jak AWS, Azure, GCP i Linode. Specjalizuję się w administracji serwerami Linux z rodzin Debian i Red Hat.\nMoje Umiejętności: Systemy Linux: Zarządzanie serwerami Debian i Red Hat. Wirtualizacja: Proxmox, VMware. Konteneryzacja: Docker, Kubernetes (rozwijam swoje umiejętności). Platformy Chmurowe: AWS, Azure, GCP, Linode. Narzędzia CI/CD: Ansible, Jenkins. Monitorowanie i zarządzanie infrastrukturą. Aktualne Cele: Rozwijam swoje umiejętności w Kubernetes i zaawansowanych rozwiązaniach chmurowych. Przygotowuję się do zdobycia certyfikatów: Google Cloud Professional (GCP) Red Hat Certified System Administrator (RHCSA). Dodatkowe Doświadczenie: Mam doświadczenie w zarządzaniu środowiskami Windows, w tym konfiguracją i monitorowaniem Active Directory. Moją długoterminową ambicją jest specjalizacja w utrzymaniu i zarządzaniu serwerami Linux oraz rozwoju w obszarze infrastruktury chmurowej.\nZnajdź Mnie Online: GitHub: MichalADA Dzięki za odwiedzenie mojego bloga! 🚀\n","permalink":"//localhost:1313/posts/about/","summary":"\u003ch1 id=\"cześć-\"\u003eCześć! 👋\u003c/h1\u003e\n\u003cp\u003eJestem administratorem systemów Linux z doświadczeniem w zarządzaniu narzędziami \u003cstrong\u003eCI/CD\u003c/strong\u003e, kontenerami \u003cstrong\u003eDocker\u003c/strong\u003e oraz wirtualizacją (\u003cstrong\u003eProxmox\u003c/strong\u003e, \u003cstrong\u003eVMware\u003c/strong\u003e). Posiadam także praktyczną wiedzę w zakresie platform chmurowych, takich jak \u003cstrong\u003eAWS\u003c/strong\u003e, \u003cstrong\u003eAzure\u003c/strong\u003e, \u003cstrong\u003eGCP\u003c/strong\u003e i \u003cstrong\u003eLinode\u003c/strong\u003e. Specjalizuję się w administracji serwerami Linux z rodzin \u003cstrong\u003eDebian\u003c/strong\u003e i \u003cstrong\u003eRed Hat\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"moje-umiejętności\"\u003eMoje Umiejętności:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eSystemy Linux\u003c/strong\u003e: Zarządzanie serwerami Debian i Red Hat.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eWirtualizacja\u003c/strong\u003e: Proxmox, VMware.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eKonteneryzacja\u003c/strong\u003e: Docker, Kubernetes (rozwijam swoje umiejętności).\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePlatformy Chmurowe\u003c/strong\u003e: AWS, Azure, GCP, Linode.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eNarzędzia CI/CD\u003c/strong\u003e: Ansible, Jenkins.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eMonitorowanie i zarządzanie infrastrukturą\u003c/strong\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"aktualne-cele\"\u003eAktualne Cele:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRozwijam swoje umiejętności w \u003cstrong\u003eKubernetes\u003c/strong\u003e i zaawansowanych rozwiązaniach chmurowych.\u003c/li\u003e\n\u003cli\u003ePrzygotowuję się do zdobycia certyfikatów:\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eGoogle Cloud Professional (GCP)\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eRed Hat Certified System Administrator (RHCSA)\u003c/strong\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"dodatkowe-doświadczenie\"\u003eDodatkowe Doświadczenie:\u003c/h2\u003e\n\u003cp\u003eMam doświadczenie w zarządzaniu środowiskami \u003cstrong\u003eWindows\u003c/strong\u003e, w tym konfiguracją i monitorowaniem \u003cstrong\u003eActive Directory\u003c/strong\u003e. Moją długoterminową ambicją jest specjalizacja w utrzymaniu i zarządzaniu serwerami Linux oraz rozwoju w obszarze infrastruktury chmurowej.\u003c/p\u003e","title":"O Mnie"},{"content":"Instrukcja instalacji GitLab CE na Ubuntu/Debian Wprowadzenie Ten przewodnik przeprowadzi Cię przez proces instalacji GitLab Community Edition (CE) na serwerze Ubuntu/Debian. GitLab CE to darmowa, samodzielnie hostowana platforma do zarządzania kodem źródłowym i projektami.\nWymagania systemowe Przed rozpoczęciem instalacji upewnij się, że Twój serwer spełnia następujące wymagania:\nUbuntu 20.04 lub nowszy / Debian 10 lub nowszy Minimum 4 GB RAM (zalecane 8 GB) Minimum 10 GB wolnego miejsca na dysku Dostęp root lub użytkownik z uprawnieniami sudo Skonfigurowany adres IP (publiczny lub prywatny) Instrukcja krok po kroku 1. Aktualizacja systemu Najpierw zaktualizuj system operacyjny:\nsudo apt update \u0026amp;\u0026amp; sudo apt upgrade -y 2. Instalacja wymaganych pakietów Zainstaluj niezbędne zależności:\nsudo apt install -y curl openssh-server ca-certificates Jeśli planujesz korzystać z powiadomień email, zainstaluj Postfix:\nsudo apt install -y postfix Uwaga: Podczas instalacji Postfix wybierz opcję \u0026ldquo;Internet Site\u0026rdquo; i wprowadź nazwę swojej domeny.\n3. Dodanie repozytorium GitLab Dodaj oficjalne repozytorium GitLab:\ncurl -fsSL https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh | sudo bash 4. Instalacja GitLab CE Zainstaluj GitLab CE, określając docelowy URL:\nsudo EXTERNAL_URL=\u0026#34;http://gitlab.twojadomena.com\u0026#34; apt install -y gitlab-ce Ważne: Zamień gitlab.twojadomena.com na właściwy adres swojego serwera.\n5. Podstawowa konfiguracja Uruchom wstępną konfigurację:\nsudo gitlab-ctl reconfigure 6. Pierwsze uruchomienie Otwórz przeglądarkę i przejdź pod skonfigurowany adres Ustaw hasło dla konta administratora (root) Zaloguj się używając loginu root i ustawionego hasła 7. Przydatne komendy administracyjne Zarządzanie usługą GitLab:\n# Sprawdzenie statusu sudo gitlab-ctl status # Restart usługi sudo gitlab-ctl restart # Zatrzymanie usługi sudo gitlab-ctl stop # Uruchomienie usługi sudo gitlab-ctl start 8. Konfiguracja SSL (opcjonalnie) Aby zabezpieczyć GitLab przez HTTPS:\nEdytuj plik konfiguracyjny: sudo nano /etc/gitlab/gitlab.rb Dodaj lub zmodyfikuj następujące linie: external_url \u0026#34;https://gitlab.twojadomena.com\u0026#34; letsencrypt[\u0026#39;enable\u0026#39;] = true letsencrypt[\u0026#39;contact_emails\u0026#39;] = [\u0026#39;admin@twojadomena.com\u0026#39;] Zastosuj zmiany: sudo gitlab-ctl reconfigure 9. Tworzenie kopii zapasowych Aby utworzyć kopię zapasową:\nsudo gitlab-backup create Informacja: Kopie zapasowe są przechowywane w katalogu /var/opt/gitlab/backups/\nRozwiązywanie problemów Jeśli napotkasz problemy podczas instalacji:\nSprawdź logi: sudo gitlab-ctl tail Upewnij się, że wszystkie usługi działają: sudo gitlab-ctl status Zweryfikuj konfigurację: sudo gitlab-ctl check-config Wsparcie Dokumentacja GitLab: https://docs.gitlab.com/ Forum społeczności: https://forum.gitlab.com/ Issue tracker: https://gitlab.com/gitlab-org/gitlab/issues ","permalink":"//localhost:1313/posts/projects/gitlab/","summary":"\u003ch1 id=\"instrukcja-instalacji-gitlab-ce-na-ubuntudebian\"\u003eInstrukcja instalacji GitLab CE na Ubuntu/Debian\u003c/h1\u003e\n\u003ch2 id=\"wprowadzenie\"\u003eWprowadzenie\u003c/h2\u003e\n\u003cp\u003eTen przewodnik przeprowadzi Cię przez proces instalacji GitLab Community Edition (CE) na serwerze Ubuntu/Debian. GitLab CE to darmowa, samodzielnie hostowana platforma do zarządzania kodem źródłowym i projektami.\u003c/p\u003e\n\u003ch2 id=\"wymagania-systemowe\"\u003eWymagania systemowe\u003c/h2\u003e\n\u003cp\u003ePrzed rozpoczęciem instalacji upewnij się, że Twój serwer spełnia następujące wymagania:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUbuntu 20.04 lub nowszy / Debian 10 lub nowszy\u003c/li\u003e\n\u003cli\u003eMinimum 4 GB RAM (zalecane 8 GB)\u003c/li\u003e\n\u003cli\u003eMinimum 10 GB wolnego miejsca na dysku\u003c/li\u003e\n\u003cli\u003eDostęp root lub użytkownik z uprawnieniami sudo\u003c/li\u003e\n\u003cli\u003eSkonfigurowany adres IP (publiczny lub prywatny)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"instrukcja-krok-po-kroku\"\u003eInstrukcja krok po kroku\u003c/h2\u003e\n\u003ch3 id=\"1-aktualizacja-systemu\"\u003e1. Aktualizacja systemu\u003c/h3\u003e\n\u003cp\u003eNajpierw zaktualizuj system operacyjny:\u003c/p\u003e","title":"Instalacja Gitlab"},{"content":"Najczęściej Atakowane Porty Sieciowe - Kompleksowy Przewodnik Bezpieczeństwa Wprowadzenie Bezpieczeństwo sieciowe stanowi fundament współczesnej infrastruktury IT. W czasach, gdy cyberataki stają się coraz bardziej wyrafinowane, zrozumienie potencjalnych wektorów ataku jest kluczowe dla każdego administratora systemu i specjalisty ds. bezpieczeństwa. W tym kompleksowym przewodniku przyjrzymy się szczegółowo najczęściej atakowanym portom sieciowym, metodom ataków oraz strategiom obrony.\nAnatomia Ataków na Porty Sieciowe Porty Związane z Transferem Plików Port 21 (FTP) Charakterystyka: Standardowy port dla protokołu FTP Główne zagrożenia: Przechwytywanie danych logowania Man-in-the-middle attacks Ataki brute force na hasła Directory traversal attacks Rekomendowane zabezpieczenia: Migracja na SFTP (Port 22) lub FTPS Implementacja silnych polityk haseł Ograniczenie dostępu do określonych adresów IP Monitoring prób nieudanego logowania Port 69 (TFTP) Charakterystyka: Uproszczony protokół transferu plików Zagrożenia: Brak mechanizmów uwierzytelniania Możliwość nieuprawnionego dostępu do plików Podatność na ataki typu buffer overflow Zabezpieczenia: Unikanie używania TFTP w środowisku produkcyjnym Ścisłe ograniczenie dostępu przez firewall Implementacja VLAN dla izolacji ruchu TFTP Porty Dostępu Zdalnego Port 22 (SSH) Charakterystyka: Podstawowy protokół bezpiecznego dostępu zdalnego Typowe wektory ataku: Ataki brute force Wykorzystanie słabych kluczy SSH Próby exploitacji znanych podatności w implementacjach SSH Przykłady Konkretnych Ataków na Port 22 Ataki Zgadywania Hasła SSH\nAutomatyczne próby logowania z różnymi kombinacjami loginów i haseł Wykorzystanie słowników popularnych haseł Ataki distributed brute force z wielu adresów IP Skuteczna obrona poprzez implementację logowania kluczem i fail2ban Symulowane Ataki Penetracyjne\nSkanowanie portu 22 w poszukiwaniu otwartych usług SSH Identyfikacja wersji oprogramowania SSH Próby wykorzystania znanych podatności Testowanie odporności na różne techniki ataków Ataki na SFTP\nPróby nieautoryzowanego dostępu do systemu plików Ataki na mechanizmy uwierzytelniania SFTP Exploitacja błędów w implementacji protokołu Próby przechwycenia sesji SFTP Ataki z Wykorzystaniem Port Knocking\nPróby odkrycia sekwencji port knocking Monitorowanie i przechwytywanie ruchu sieciowego Ataki replay na zidentyfikowane sekwencje Exploitacja błędnych implementacji port knocking Zaawansowane zabezpieczenia:\nImplementacja fail2ban Wykorzystanie kluczy SSH zamiast haseł Regularna rotacja kluczy Monitoring nietypowych wzorców dostępu Ograniczenie listy dozwolonych algorytmów szyfrowania Port 23 (Telnet) Charakterystyka: Przestarzały protokół dostępu zdalnego Krytyczne zagrożenia: Brak szyfrowania komunikacji Podatność na podsłuchiwanie Łatwość przechwycenia danych uwierzytelniających Zalecenia bezpieczeństwa: Całkowite wyłączenie usługi Telnet Migracja na SSH Wdrożenie polityk bezpieczeństwa zabraniających używania Telnet Porty Komunikacyjne Port 25 (SMTP) Charakterystyka: Podstawowy port dla przesyłania poczty e-mail Współczesne zagrożenia: Spam relay Email spoofing Ataki typu backscatter Malware distribution Zaawansowana ochrona: Implementacja SPF, DKIM i DMARC Filtrowanie ruchu SMTP Monitoring reputacji IP Wdrożenie systemu anty-spamowego Regularne audyty logów SMTP Port 53 (DNS) Charakterystyka: Kluczowy port dla resolucji nazw domenowych Współczesne metody ataków: DNS cache poisoning DNS amplification attacks DNS tunneling Fast-flux DNS Kompleksowa ochrona: Implementacja DNSSEC Monitoring anomalii w ruchu DNS Rate limiting zapytań DNS Separacja serwerów rekurencyjnych i autorytatywnych Regularne aktualizacje oprogramowania DNS Porty Webowe Port 80 (HTTP) i 443 (HTTPS) Charakterystyka: Standardowe porty dla ruchu webowego Zaawansowane wektory ataków: SQL Injection Cross-Site Scripting (XSS) DDoS attacks SSL/TLS vulnerabilities Web application vulnerabilities Wielowarstwowa ochrona: Implementacja WAF (Web Application Firewall) Automatyczne przekierowanie HTTP na HTTPS Regularne testy penetracyjne Content Security Policy (CSP) Monitoring ruchu w czasie rzeczywistym Porty 8080 i 8443 Charakterystyka: Alternatywne porty dla serwerów WWW Specyficzne zagrożenia: Backdoor attempts Proxy abuse Service exploitation Dedykowane zabezpieczenia: Strict access control SSL/TLS encryption Regular security audits Traffic anomaly detection Porty Systemu Windows Port 135 (RPC) Charakterystyka: Windows Remote Procedure Call Typowe ataki: Buffer overflow exploits Remote code execution Service enumeration Specjalistyczne zabezpieczenia: Ścisła kontrola dostępu Monitoring aktywności RPC Regularne patche bezpieczeństwa Segmentacja sieci Porty 137-139 (NetBIOS) Charakterystyka: Legacy Windows networking Zagrożenia: Information leakage Network enumeration SMB attacks Rekomendowane działania: Disable if not needed Strict firewall rules Regular security assessments Network segmentation Zaawansowane Strategie Ochrony 1. Monitoring i Analiza Ruchu Implementacja systemów IDS/IPS Analiza behawioralna ruchu sieciowego Machine learning dla detekcji anomalii Regularne audyty bezpieczeństwa Monitoring w czasie rzeczywistym 2. Zarządzanie Podatnościami Regularne skanowanie portów Vulnerability assessment Patch management Configuration management Risk assessment 3. Segmentacja Sieci Implementacja VLAN Network zoning Micro-segmentation Zero trust architecture Access control lists 4. Incident Response Przygotowanie planów reakcji Zespół reagowania na incydenty Procedury eskalacji Dokumentacja incydentów Lessons learned process Najlepsze Praktyki dla Administratorów Codzienna Administracja Monitoring Systemu\nRegularne sprawdzanie logów Analiza wzorców ruchu Weryfikacja uprawnień Kontrola dostępu Zarządzanie Konfiguracją\nDokumentacja zmian Version control Change management Configuration backups Aktualizacje i Patche\nRegular updates Security patches Firmware updates Testing procedures Długoterminowe Planowanie Strategia Bezpieczeństwa\nRisk assessment Security roadmap Budget planning Training programs Disaster Recovery\nBackup procedures Recovery testing Business continuity Emergency protocols Narzędzia i Technologie Essential Security Tools Network Monitoring\nWireshark Nagios PRTG Zabbix Security Testing\nNmap Metasploit Nessus OpenVAS Log Management\nELK Stack Splunk Graylog Logstash Podsumowanie Bezpieczeństwo portów sieciowych wymaga kompleksowego podejścia, łączącego:\nZrozumienie zagrożeń Implementację zabezpieczeń Regularne audyty Monitoring i reakcję na incydenty Ciągłe doskonalenie procedur Pamiętaj, że bezpieczeństwo to proces, nie produkt. Wymaga ciągłej uwagi, aktualizacji i dostosowywania do nowych zagrożeń.\n","permalink":"//localhost:1313/publications/najczesciej-atakowane-porty/","summary":"\u003ch1 id=\"najczęściej-atakowane-porty-sieciowe---kompleksowy-przewodnik-bezpieczeństwa\"\u003eNajczęściej Atakowane Porty Sieciowe - Kompleksowy Przewodnik Bezpieczeństwa\u003c/h1\u003e\n\u003ch2 id=\"wprowadzenie\"\u003eWprowadzenie\u003c/h2\u003e\n\u003cp\u003eBezpieczeństwo sieciowe stanowi fundament współczesnej infrastruktury IT. W czasach, gdy cyberataki stają się coraz bardziej wyrafinowane, zrozumienie potencjalnych wektorów ataku jest kluczowe dla każdego administratora systemu i specjalisty ds. bezpieczeństwa. W tym kompleksowym przewodniku przyjrzymy się szczegółowo najczęściej atakowanym portom sieciowym, metodom ataków oraz strategiom obrony.\u003c/p\u003e\n\u003ch2 id=\"anatomia-ataków-na-porty-sieciowe\"\u003eAnatomia Ataków na Porty Sieciowe\u003c/h2\u003e\n\u003ch3 id=\"porty-związane-z-transferem-plików\"\u003ePorty Związane z Transferem Plików\u003c/h3\u003e\n\u003ch4 id=\"port-21-ftp\"\u003ePort 21 (FTP)\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eCharakterystyka\u003c/strong\u003e: Standardowy port dla protokołu FTP\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eGłówne zagrożenia\u003c/strong\u003e:\n\u003cul\u003e\n\u003cli\u003ePrzechwytywanie danych logowania\u003c/li\u003e\n\u003cli\u003eMan-in-the-middle attacks\u003c/li\u003e\n\u003cli\u003eAtaki brute force na hasła\u003c/li\u003e\n\u003cli\u003eDirectory traversal attacks\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eRekomendowane zabezpieczenia\u003c/strong\u003e:\n\u003cul\u003e\n\u003cli\u003eMigracja na SFTP (Port 22) lub FTPS\u003c/li\u003e\n\u003cli\u003eImplementacja silnych polityk haseł\u003c/li\u003e\n\u003cli\u003eOgraniczenie dostępu do określonych adresów IP\u003c/li\u003e\n\u003cli\u003eMonitoring prób nieudanego logowania\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"port-69-tftp\"\u003ePort 69 (TFTP)\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eCharakterystyka\u003c/strong\u003e: Uproszczony protokół transferu plików\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eZagrożenia\u003c/strong\u003e:\n\u003cul\u003e\n\u003cli\u003eBrak mechanizmów uwierzytelniania\u003c/li\u003e\n\u003cli\u003eMożliwość nieuprawnionego dostępu do plików\u003c/li\u003e\n\u003cli\u003ePodatność na ataki typu buffer overflow\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eZabezpieczenia\u003c/strong\u003e:\n\u003cul\u003e\n\u003cli\u003eUnikanie używania TFTP w środowisku produkcyjnym\u003c/li\u003e\n\u003cli\u003eŚcisłe ograniczenie dostępu przez firewall\u003c/li\u003e\n\u003cli\u003eImplementacja VLAN dla izolacji ruchu TFTP\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"porty-dostępu-zdalnego\"\u003ePorty Dostępu Zdalnego\u003c/h3\u003e\n\u003ch4 id=\"port-22-ssh\"\u003ePort 22 (SSH)\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eCharakterystyka\u003c/strong\u003e: Podstawowy protokół bezpiecznego dostępu zdalnego\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTypowe wektory ataku\u003c/strong\u003e:\n\u003cul\u003e\n\u003cli\u003eAtaki brute force\u003c/li\u003e\n\u003cli\u003eWykorzystanie słabych kluczy SSH\u003c/li\u003e\n\u003cli\u003ePróby exploitacji znanych podatności w implementacjach SSH\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch5 id=\"przykłady-konkretnych-ataków-na-port-22\"\u003ePrzykłady Konkretnych Ataków na Port 22\u003c/h5\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eAtaki Zgadywania Hasła SSH\u003c/strong\u003e\u003c/p\u003e","title":"Najczęściej Atakowane Porty Sieciowe - Co Powinieneś Wiedzieć"},{"content":"SELinux - Kompleksowy przewodnik Spis treści Wprowadzenie do SELinux Architektura SELinux Tryby pracy Konteksty bezpieczeństwa Polityki SELinux Podstawowe komendy Booleany Rozwiązywanie problemów Najlepsze praktyki Wprowadzenie do SELinux Security-Enhanced Linux (SELinux) to zaawansowany system kontroli dostępu (MAC - Mandatory Access Control) zaimplementowany w jądrze Linux. Został pierwotnie opracowany przez NSA i później zintegrowany z wieloma dystrybucjami Linux.\nGłówne cechy: Kontrola dostępu na poziomie jądra systemu Szczegółowa polityka bezpieczeństwa Ochrona przed eskalacją uprawnień Izolacja procesów i usług Minimalizacja potencjalnych zagrożeń Architektura SELinux SELinux działa na zasadzie etykietowania (labeling) wszystkich obiektów w systemie i kontrolowania dostępu między nimi na podstawie zdefiniowanych reguł.\nKomponenty: Kernel SELinux Polityki bezpieczeństwa Narzędzia użytkownika System logowania # Sprawdzenie czy SELinux jest zainstalowany rpm -qa | grep selinux Tryby pracy SELinux może działać w trzech trybach, które określają jak system reaguje na naruszenia polityki.\n1. Enforcing Polityka jest aktywnie egzekwowana Naruszenia są blokowane i logowane Zalecany w środowisku produkcyjnym # Włączenie trybu Enforcing sudo setenforce 1 2. Permissive Polityka nie jest egzekwowana Naruszenia są tylko logowane Przydatny do debugowania i testowania # Włączenie trybu Permissive sudo setenforce 0 3. Disabled SELinux jest całkowicie wyłączony Brak kontroli dostępu Niezalecany w produkcji # Sprawdzenie aktualnego trybu sestatus Konteksty bezpieczeństwa Każdy obiekt w systemie (pliki, procesy, porty) posiada kontekst bezpieczeństwa składający się z czterech elementów:\nFormat kontekstu: user:role:type:level user: Tożsamość SELinux role: Przypisana rola w systemie type: Typ obiektu lub domeny level: Poziom bezpieczeństwa (używany w MLS) # Sprawdzenie kontekstu pliku ls -Z /ścieżka/do/pliku # Sprawdzenie kontekstu procesu ps auxZ | grep httpd Zarządzanie kontekstami: # Zmiana kontekstu pliku sudo chcon -t httpd_sys_content_t /var/www/html/index.html # Przywrócenie domyślnego kontekstu sudo restorecon -Rv /var/www/html/ # Dodanie reguły trwałej sudo semanage fcontext -a -t httpd_sys_content_t \u0026#34;/var/www/custom(/.*)?\u0026#34; Polityki SELinux SELinux oferuje różne typy polityk dostosowane do różnych przypadków użycia.\nTargeted (domyślna) Chroni tylko wybrane usługi systemowe Najprostsza w konfiguracji Zalecana dla większości przypadków MLS (Multi-Level Security) Zaawansowana kontrola dostępu Używana w środowiskach o wysokich wymaganiach bezpieczeństwa Wymaga szczegółowej konfiguracji # Sprawdzenie aktywnej polityki sestatus | grep \u0026#34;Loaded policy\u0026#34; # Lista dostępnych polityk semodule -l Podstawowe komendy Sprawdzanie statusu i konfiguracji: # Status SELinux sestatus # Aktywne porty semanage port -l # Lista modułów polityki semodule -l Zarządzanie kontekstami: # Zmiana kontekstu chcon -t httpd_sys_content_t plik.html # Przywracanie domyślnych kontekstów restorecon -Rv /ścieżka # Dodawanie reguł trwałych semanage fcontext -a -t httpd_sys_content_t \u0026#34;/custom/path(/.*)?\u0026#34; Booleany Booleany to przełączniki umożliwiające szybką modyfikację zachowania polityki SELinux.\n# Lista wszystkich booleanów getsebool -a # Sprawdzenie konkretnego booleana getsebool httpd_enable_homedirs # Włączenie booleana (tymczasowo) setsebool httpd_enable_homedirs on # Włączenie booleana (trwale) setsebool -P httpd_enable_homedirs on Popularne booleany: httpd_enable_homedirs: Dostęp Apache do katalogów domowych ftpd_anon_write: Zapis przez anonimowego FTP httpd_can_network_connect: Połączenia sieciowe dla Apache Rozwiązywanie problemów Analiza logów: # Przeszukiwanie logów audytu ausearch -m AVC -ts recent # Analiza naruszeń audit2why \u0026lt; /var/log/audit/audit.log # Generowanie modułu polityki audit2allow -a -M mymodule Typowe problemy: Nieprawidłowe konteksty plików Brakujące porty w polityce Wymagane booleany są wyłączone Konflikty z innymi mechanizmami bezpieczeństwa Rozwiązywanie: # Sprawdzenie kontekstów ls -Z # Dodanie portu semanage port -a -t http_port_t -p tcp 8080 # Włączenie wymaganego booleana setsebool -P httpd_can_network_connect on Najlepsze praktyki Używaj trybu Enforcing\nZawsze w środowisku produkcyjnym Permissive tylko do debugowania Regularnie monitoruj logi\nausearch -m AVC -ts recent Twórz własne moduły polityki\naudit2allow -a -M custom_policy semodule -i custom_policy.pp Dokumentuj zmiany\nZapisuj wszystkie modyfikacje kontekstów Przechowuj listę własnych modułów polityki Automatyzuj zarządzanie\nUżywaj narzędzi do zarządzania konfiguracją Twórz skrypty do typowych operacji Regularne aktualizacje\n# Aktualizacja polityk yum update selinux-policy Przykładowa automatyzacja: #!/bin/bash # Skrypt do konfiguracji kontekstów dla nowej aplikacji web # Ustawienie kontekstów semanage fcontext -a -t httpd_sys_content_t \u0026#34;/var/www/app(/.*)?\u0026#34; restorecon -Rv /var/www/app # Włączenie wymaganych booleanów setsebool -P httpd_can_network_connect on setsebool -P httpd_can_network_connect_db on # Sprawdzenie konfiguracji sestatus getsebool -a | grep httpd ls -Z /var/www/app ","permalink":"//localhost:1313/posts/projects/selinux/","summary":"\u003ch1 id=\"selinux---kompleksowy-przewodnik\"\u003eSELinux - Kompleksowy przewodnik\u003c/h1\u003e\n\u003ch2 id=\"spis-treści\"\u003eSpis treści\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#wprowadzenie-do-selinux\"\u003eWprowadzenie do SELinux\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#architektura-selinux\"\u003eArchitektura SELinux\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#tryby-pracy\"\u003eTryby pracy\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#konteksty-bezpiecze%C5%84stwa\"\u003eKonteksty bezpieczeństwa\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#polityki-selinux\"\u003ePolityki SELinux\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#podstawowe-komendy\"\u003ePodstawowe komendy\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#booleany\"\u003eBooleany\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#rozwi%C4%85zywanie-problem%C3%B3w\"\u003eRozwiązywanie problemów\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#najlepsze-praktyki\"\u003eNajlepsze praktyki\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"wprowadzenie-do-selinux\"\u003eWprowadzenie do SELinux\u003c/h2\u003e\n\u003cp\u003eSecurity-Enhanced Linux (SELinux) to zaawansowany system kontroli dostępu (MAC - Mandatory Access Control) zaimplementowany w jądrze Linux. Został pierwotnie opracowany przez NSA i później zintegrowany z wieloma dystrybucjami Linux.\u003c/p\u003e\n\u003ch3 id=\"główne-cechy\"\u003eGłówne cechy:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eKontrola dostępu na poziomie jądra systemu\u003c/li\u003e\n\u003cli\u003eSzczegółowa polityka bezpieczeństwa\u003c/li\u003e\n\u003cli\u003eOchrona przed eskalacją uprawnień\u003c/li\u003e\n\u003cli\u003eIzolacja procesów i usług\u003c/li\u003e\n\u003cli\u003eMinimalizacja potencjalnych zagrożeń\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"architektura-selinux\"\u003eArchitektura SELinux\u003c/h2\u003e\n\u003cp\u003eSELinux działa na zasadzie etykietowania (labeling) wszystkich obiektów w systemie i kontrolowania dostępu między nimi na podstawie zdefiniowanych reguł.\u003c/p\u003e","title":"SElinux-Wprowadzenie"},{"content":"Instalacja Wazuh - kompletny przewodnik dla początkujących Cześć! W dzisiejszym wpisie przeprowadzę Cię przez proces instalacji Wazuh - potężnego narzędzia do monitorowania bezpieczeństwa. Niezależnie od tego, czy zabezpieczasz małą firmę czy własne projekty, Wazuh może znacząco poprawić Twoje bezpieczeństwo IT.\nCo to jest Wazuh? Wazuh to wszechstronne narzędzie open-source, które łączy w sobie:\nMonitoring bezpieczeństwa w czasie rzeczywistym Wykrywanie włamań Monitorowanie integralności plików Reagowanie na zagrożenia Zgodność z przepisami (GDPR, PCI DSS) Wymagania systemowe Zanim zaczniemy, upewnij się, że Twój serwer spełnia minimalne wymagania:\nDla serwera Wazuh: CPU: minimum 4 rdzenie RAM: minimum 8GB (zalecane 16GB) Dysk: minimum 50GB (zalecane 100GB) System: Ubuntu 22.04 LTS (zalecany) Dla agentów Wazuh: CPU: 2 rdzenie RAM: 2GB Dysk: 20GB Wspierane systemy: Linux, Windows, macOS Krok 1: Przygotowanie systemu Najpierw zaktualizujmy system i skonfigurujmy podstawowe zabezpieczenia:\n# Aktualizacja systemu sudo apt update \u0026amp;\u0026amp; sudo apt upgrade -y # Konfiguracja firewalla sudo ufw allow 1514/tcp # Komunikacja agent-server sudo ufw allow 1515/tcp # Rejestracja agentów sudo ufw allow 443/tcp # Panel webowy sudo ufw enable Krok 2: Instalacja serwera Wazuh Teraz przechodzimy do właściwej instalacji:\n# Pobieranie instalatora curl -sO https://packages.wazuh.com/4.7/wazuh-install.sh # Uruchomienie instalacji (opcja -a instaluje wszystkie komponenty) sudo bash ./wazuh-install.sh -a Po instalacji sprawdź, czy wszystkie usługi działają poprawnie:\nsudo systemctl status wazuh-manager sudo systemctl status wazuh-indexer sudo systemctl status wazuh-dashboard Krok 3: Instalacja agentów Dla Ubuntu/Debian: wget https://packages.wazuh.com/4.x/apt/pool/main/w/wazuh-agent/wazuh-agent_4.7.5-1_amd64.deb sudo WAZUH_MANAGER=\u0026#39;ip_twojego_serwera\u0026#39; WAZUH_AGENT_NAME=\u0026#39;nazwa_hosta\u0026#39; dpkg -i ./wazuh-agent_4.7.5-1_amd64.deb sudo systemctl start wazuh-agent Dla Windows: Pobierz instalator ze strony Wazuh Uruchom instalator jako administrator Podaj adres IP serwera Wazuh podczas instalacji Krok 4: Podstawowa konfiguracja Główny plik konfiguracyjny serwera znajduje się w /var/ossec/etc/ossec.conf. Oto przykładowa podstawowa konfiguracja:\n\u0026lt;ossec_config\u0026gt; \u0026lt;global\u0026gt; \u0026lt;email_notification\u0026gt;yes\u0026lt;/email_notification\u0026gt; \u0026lt;email_to\u0026gt;twoj@email.com\u0026lt;/email_to\u0026gt; \u0026lt;smtp_server\u0026gt;smtp.twojserwer.com\u0026lt;/smtp_server\u0026gt; \u0026lt;email_from\u0026gt;wazuh@twojadomena.com\u0026lt;/email_from\u0026gt; \u0026lt;/global\u0026gt; \u0026lt;syscheck\u0026gt; \u0026lt;frequency\u0026gt;43200\u0026lt;/frequency\u0026gt; \u0026lt;directories check_all=\u0026#34;yes\u0026#34;\u0026gt;/etc,/usr/bin,/usr/sbin\u0026lt;/directories\u0026gt; \u0026lt;directories check_all=\u0026#34;yes\u0026#34;\u0026gt;/var/www,/var/lib\u0026lt;/directories\u0026gt; \u0026lt;/syscheck\u0026gt; \u0026lt;/ossec_config\u0026gt; Krok 5: Pierwsze logowanie Otwórz przeglądarkę i przejdź do https://ip_twojego_serwera Zaloguj się używając domyślnych danych (znajdziesz je w /var/ossec/etc/wazuh-dashboard/credentials.txt) Zmień hasło przy pierwszym logowaniu Najczęstsze problemy i rozwiązania Problem z połączeniem agenta: # Sprawdź status agenta sudo systemctl status wazuh-agent # Sprawdź logi tail -f /var/ossec/logs/ossec.log Problemy z serwerem: # Weryfikacja statusu sudo systemctl status wazuh-manager # Sprawdzenie logów tail -f /var/ossec/logs/ossec.log Co dalej? Po podstawowej instalacji warto: 9. Skonfigurować dodatkowe reguły monitorowania 10. Ustawić powiadomienia (np. przez Slack lub email) 11. Skonfigurować regular backups 12. Dostosować dashboardy do swoich potrzeb\nWskazówki bezpieczeństwa Regularnie aktualizuj system i komponenty Wazuh Zmień domyślne hasła Ogranicz dostęp do panelu administracyjnego Włącz uwierzytelnianie dwuskładnikowe Regularnie twórz kopie zapasowe konfiguracji Przydatne linki Oficjalna dokumentacja Wazuh Forum społeczności Wazuh GitHub Wazuh Mam nadzieję, że ten przewodnik pomoże Ci w sprawnej instalacji Wazuh! Jeśli masz pytania, zostaw komentarz poniżej.\nOstatnia aktualizacja: Luty 2025\n","permalink":"//localhost:1313/posts/projects/wazuh/","summary":"\u003ch1 id=\"instalacja-wazuh---kompletny-przewodnik-dla-początkujących\"\u003eInstalacja Wazuh - kompletny przewodnik dla początkujących\u003c/h1\u003e\n\u003cp\u003eCześć! W dzisiejszym wpisie przeprowadzę Cię przez proces instalacji Wazuh - potężnego narzędzia do monitorowania bezpieczeństwa. Niezależnie od tego, czy zabezpieczasz małą firmę czy własne projekty, Wazuh może znacząco poprawić Twoje bezpieczeństwo IT.\u003c/p\u003e\n\u003ch2 id=\"co-to-jest-wazuh\"\u003eCo to jest Wazuh?\u003c/h2\u003e\n\u003cp\u003eWazuh to wszechstronne narzędzie open-source, które łączy w sobie:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMonitoring bezpieczeństwa w czasie rzeczywistym\u003c/li\u003e\n\u003cli\u003eWykrywanie włamań\u003c/li\u003e\n\u003cli\u003eMonitorowanie integralności plików\u003c/li\u003e\n\u003cli\u003eReagowanie na zagrożenia\u003c/li\u003e\n\u003cli\u003eZgodność z przepisami (GDPR, PCI DSS)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"wymagania-systemowe\"\u003eWymagania systemowe\u003c/h2\u003e\n\u003cp\u003eZanim zaczniemy, upewnij się, że Twój serwer spełnia minimalne wymagania:\u003c/p\u003e","title":"Wazuh"},{"content":"Przewodnik Konfiguracji Lokalnego Serwera DNS BIND Ten przewodnik pomoże Ci skonfigurować lokalny serwer DNS przy użyciu BIND9 do obsługi własnej domeny (np. mydomain.local) z obsługą rozwiązywania nazw w przód i wstecz.\nWymagania wstępne System Ubuntu/Debian\nDostęp root lub sudo\nPodstawowa znajomość koncepcji DNS\nInstalacja Zaktualizuj system i zainstaluj BIND9:\nsudo apt update sudo apt upgrade -y sudo apt install bind9 bind9utils bind9-doc -y Sprawdź status usługi BIND:\nsudo systemctl status bind9 Konfiguracja 1. Konfiguracja stref lokalnych Edytuj plik konfiguracji lokalnej:\nsudo nano /etc/bind/named.conf.local Dodaj następujące konfiguracje stref:\nzone \u0026#34;mydomain.local\u0026#34; { type master; file \u0026#34;/etc/bind/zones/mydomain.local.zone\u0026#34;; }; zone \u0026#34;0.0.127.in-addr.arpa\u0026#34; { type master; file \u0026#34;/etc/bind/zones/reverse.local.zone\u0026#34;; }; 2. Tworzenie plików stref Utwórz katalog na strefy:\nsudo mkdir -p /etc/bind/zones Plik strefy prostej (forward) Utwórz i edytuj plik strefy prostej:\nsudo nano /etc/bind/zones/mydomain.local.zone Dodaj następującą konfigurację:\n$TTL 86400 @ IN SOA ns1.mydomain.local. admin.mydomain.local. ( 2025011401 ; Numer seryjny 3600 ; Odświeżanie 1800 ; Ponawianie 1209600 ; Wygaśnięcie 86400 ) ; Minimalny TTL @ IN NS ns1.mydomain.local. @ IN A 127.0.0.1 ns1 IN A 127.0.0.1 www IN A 127.0.0.1 app IN A 127.0.0.2 Plik strefy odwrotnej (reverse) Utwórz i edytuj plik strefy odwrotnej:\nsudo nano /etc/bind/zones/reverse.local.zone Dodaj następującą konfigurację:\n$TTL 86400 @ IN SOA ns1.mydomain.local. admin.mydomain.local. ( 2025011401 ; Numer seryjny 3600 ; Odświeżanie 1800 ; Ponawianie 1209600 ; Wygaśnięcie 86400 ) ; Minimalny TTL @ IN NS ns1.mydomain.local. 1 IN PTR ns1.mydomain.local. 1 IN PTR www.mydomain.local. 2 IN PTR app.mydomain.local. 3. Konfiguracja opcji BIND Edytuj plik opcji:\nsudo nano /etc/bind/named.conf.options Dodaj następującą konfigurację:\noptions { directory \u0026#34;/var/cache/bind\u0026#34;; recursion yes; allow-query { localhost; }; forwarders { 8.8.8.8; // DNS Google 1.1.1.1; // DNS Cloudflare }; dnssec-validation auto; listen-on { 127.0.0.1; }; listen-on-v6 { ::1; }; }; Weryfikacja i testowanie 1. Sprawdź składnię konfiguracji sudo named-checkconf sudo named-checkzone mydomain.local /etc/bind/zones/mydomain.local.zone sudo named-checkzone 0.0.127.in-addr.arpa /etc/bind/zones/reverse.local.zone 2. Zrestartuj usługę BIND sudo systemctl restart bind9 3. Przetestuj rozwiązywanie DNS Test wyszukiwania do przodu:\ndig @127.0.0.1 www.mydomain.local Test wyszukiwania wstecznego:\ndig -x 127.0.0.1 @127.0.0.1 Rozwiązywanie problemów Sprawdź logi BIND: sudo tail -f /var/log/syslog | grep named Sprawdź status usługi: sudo systemctl status bind9 Sprawdź uprawnienia plików stref: sudo ls -l /etc/bind/zones/ Typowe problemy Usługa nie uruchamia się: Sprawdź błędy składni w plikach konfiguracyjnych\nRozwiązywanie DNS nie działa: Sprawdź ustawienia zapory sieciowej i adresy nasłuchiwania BIND\nProblemy z transferem stref: Sprawdź uprawnienia plików i składnię plików stref\nAspekty bezpieczeństwa Ogranicz transfery stref do zaufanych serwerów\nSkonfiguruj odpowiednie listy kontroli dostępu w allow-query\nAktualizuj BIND o najnowsze poprawki bezpieczeństwa\nUżyj DNSSEC dla zwiększonego bezpieczeństwa\nDodatkowe źródła Dokumentacja BIND\nPrzewodnik BIND dla Ubuntu\n","permalink":"//localhost:1313/posts/projects/instalacja_bind/","summary":"\u003ch1 id=\"przewodnik-konfiguracji-lokalnego-serwera-dns-bind\"\u003ePrzewodnik Konfiguracji Lokalnego Serwera DNS BIND\u003c/h1\u003e\n\u003cp\u003eTen przewodnik pomoże Ci skonfigurować lokalny serwer DNS przy użyciu BIND9 do obsługi własnej domeny (np. mydomain.local) z obsługą rozwiązywania nazw w przód i wstecz.\u003c/p\u003e\n\u003ch2 id=\"wymagania-wstępne\"\u003eWymagania wstępne\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eSystem Ubuntu/Debian\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDostęp root lub sudo\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePodstawowa znajomość koncepcji DNS\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"instalacja\"\u003eInstalacja\u003c/h2\u003e\n\u003cp\u003eZaktualizuj system i zainstaluj BIND9:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo apt update\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo apt upgrade -y\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo apt install bind9 bind9utils bind9-doc -y\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSprawdź status usługi BIND:\u003c/p\u003e","title":"Instalacja Bind"},{"content":"Konfiguracja Split-Horizon DNS na CentOS/AlmaLinux Ten poradnik przeprowadzi Cię przez proces konfiguracji Split-Horizon DNS przy użyciu BIND na systemach CentOS lub AlmaLinux. Split-Horizon DNS pozwala serwerowi DNS zwracać różne rekordy w zależności od źródła zapytania (sieć wewnętrzna vs zewnętrzna).\n1. Wymagania wstępne CentOS, AlmaLinux lub RedHat z dostępem root lub sudo Zainstalowany BIND (bind i bind-utils) 2. Instalacja BIND sudo dnf install bind bind-utils -y 3. Przygotowanie plików stref Utworzenie katalogu stref:\nsudo mkdir -p /etc/named/zones Plik strefy wewnętrznej Utwórz plik /etc/named/zones/internal.example.com.zone:\n$TTL 86400\r@ IN SOA ns1.example.com. admin.example.com. (\r2025011501 ; Numer seryjny\r3600 ; Odświeżanie\r1800 ; Ponawianie\r1209600 ; Wygaśnięcie\r86400 ) ; Minimalny TTL\r@ IN NS ns1.example.com.\rns1 IN A 192.168.1.1\rwww IN A 192.168.1.2\rmail IN A 192.168.1.3 Plik strefy zewnętrznej Utwórz plik /etc/named/zones/external.example.com.zone:\n$TTL 86400\r@ IN SOA ns1.example.com. admin.example.com. (\r2025011501 ; Numer seryjny\r3600 ; Odświeżanie\r1800 ; Ponawianie\r1209600 ; Wygaśnięcie\r86400 ) ; Minimalny TTL\r@ IN NS ns1.example.com.\rns1 IN A 203.0.113.1\rwww IN A 203.0.113.2\rmail IN A 203.0.113.3 4. Konfiguracja BIND Edytuj plik /etc/named.conf aby zdefiniować widoki dla zapytań wewnętrznych i zewnętrznych.\nWidok wewnętrzny view \u0026#34;internal\u0026#34; {\rmatch-clients { 192.168.1.0/24; localhost; }; // Sieć wewnętrzna\rzone \u0026#34;example.com\u0026#34; {\rtype master;\rfile \u0026#34;/etc/named/zones/internal.example.com.zone\u0026#34;;\r};\r}; Widok zewnętrzny view \u0026#34;external\u0026#34; {\rmatch-clients { any; }; // Wszystkie pozostałe źródła\rzone \u0026#34;example.com\u0026#34; {\rtype master;\rfile \u0026#34;/etc/named/zones/external.example.com.zone\u0026#34;;\r};\r}; 5. Walidacja konfiguracji Sprawdź plik konfiguracyjny:\nsudo named-checkconf Sprawdź pliki stref:\nsudo named-checkzone example.com /etc/named/zones/internal.example.com.zone sudo named-checkzone example.com /etc/named/zones/external.example.com.zone 6. Restart BIND Włącz i zrestartuj usługę BIND:\nsudo systemctl enable named sudo systemctl restart named Sprawdź status:\nsudo systemctl status named 7. Konfiguracja firewalla Zezwól na ruch DNS przez firewall:\nsudo firewall-cmd --permanent --add-service=dns sudo firewall-cmd --reload 8. Testowanie Test sieci wewnętrznej Uruchom to polecenie z maszyny w sieci wewnętrznej:\ndig @localhost www.example.com Oczekiwany wynik: IP z internal.example.com.zone (np. 192.168.1.2)\nTest sieci zewnętrznej Uruchom to polecenie z maszyny zewnętrznej:\ndig @\u0026lt;PUBLICZNE_IP_SERWERA_BIND\u0026gt; www.example.com Oczekiwany wynik: IP z external.example.com.zone (np. 203.0.113.2)\n9. Opcjonalnie: Włączenie logowania Dodaj konfigurację logowania Edytuj /etc/named.conf aby dodać logowanie:\nlogging {\rchannel query_log {\rfile \u0026#34;/var/log/named_queries.log\u0026#34;;\rseverity dynamic;\r};\rcategory queries { query_log; };\r}; Utwórz plik logów sudo touch /var/log/named_queries.log sudo chmod 640 /var/log/named_queries.log sudo chown named:named /var/log/named_queries.log Zrestartuj BIND sudo systemctl restart named Serwer Split-Horizon DNS jest teraz skonfigurowany i gotowy do użycia. W przypadku problemów, sprawdź dokładnie pliki konfiguracyjne i logi w celu rozwiązania problemów.\nPorady dotyczące rozwiązywania problemów Sprawdź status usługi BIND używając systemctl status named Przejrzyj logi systemowe: journalctl -u named Upewnij się, że porty są otwarte: netstat -tulpn | grep named Sprawdź uprawnienia do plików konfiguracyjnych ","permalink":"//localhost:1313/posts/projects/splithorizon/","summary":"\u003ch1 id=\"konfiguracja-split-horizon-dns-na-centosalmalinux\"\u003eKonfiguracja Split-Horizon DNS na CentOS/AlmaLinux\u003c/h1\u003e\n\u003cp\u003eTen poradnik przeprowadzi Cię przez proces konfiguracji Split-Horizon DNS przy użyciu BIND na systemach CentOS lub AlmaLinux. Split-Horizon DNS pozwala serwerowi DNS zwracać różne rekordy w zależności od źródła zapytania (sieć wewnętrzna vs zewnętrzna).\u003c/p\u003e\n\u003ch2 id=\"1-wymagania-wstępne\"\u003e1. Wymagania wstępne\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eCentOS, AlmaLinux lub RedHat z dostępem root lub sudo\u003c/li\u003e\n\u003cli\u003eZainstalowany BIND (\u003ccode\u003ebind\u003c/code\u003e i \u003ccode\u003ebind-utils\u003c/code\u003e)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2-instalacja-bind\"\u003e2. Instalacja BIND\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo dnf install \u003cspan class=\"nb\"\u003ebind\u003c/span\u003e bind-utils -y\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"3-przygotowanie-plików-stref\"\u003e3. Przygotowanie plików stref\u003c/h2\u003e\n\u003cp\u003eUtworzenie katalogu stref:\u003c/p\u003e","title":"Split-HorizonDNS"},{"content":"Przewodnik Instalacji Dockera Docker to platforma konteneryzacji, która umożliwia uruchamianie aplikacji w lekkich, izolowanych środowiskach. Poniżej znajdziesz instrukcje instalacji dla różnych dystrybucji Linuxa.\n1. Ubuntu/Debian Aktualizacja systemu:\nsudo apt update \u0026amp;\u0026amp; sudo apt upgrade -y Instalacja wymaganych pakietów:\nsudo apt install -y curl apt-transport-https ca-certificates software-properties-common Dodanie repozytorium Dockera:\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo \u0026#34;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\u0026#34; | sudo tee /etc/apt/sources.list.d/docker.list Instalacja Dockera:\nsudo apt update sudo apt install -y docker-ce docker-ce-cli containerd.io Włączenie i uruchomienie Dockera:\nsudo systemctl enable docker sudo systemctl start docker Weryfikacja instalacji:\nsudo docker run hello-world 2. Red Hat/CentOS Aktualizacja systemu:\nsudo yum update -y Dodanie repozytorium Dockera:\nsudo yum install -y yum-utils sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo Instalacja Dockera:\nsudo yum install -y docker-ce docker-ce-cli containerd.io Włączenie i uruchomienie Dockera:\nsudo systemctl enable docker sudo systemctl start docker Weryfikacja instalacji:\nsudo docker run hello-world 3. Fedora Aktualizacja systemu:\nsudo dnf update -y Dodanie repozytorium Dockera:\nsudo dnf install -y dnf-plugins-core sudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo Instalacja Dockera:\nsudo dnf install -y docker-ce docker-ce-cli containerd.io Włączenie i uruchomienie Dockera:\nsudo systemctl enable docker sudo systemctl start docker Weryfikacja instalacji:\nsudo docker run hello-world 4. Arch Linux Aktualizacja systemu:\nsudo pacman -Syu Instalacja Dockera:\nsudo pacman -S docker Włączenie i uruchomienie Dockera:\nsudo systemctl enable docker sudo systemctl start docker Dodanie użytkownika do grupy Docker (opcjonalne):\nsudo usermod -aG docker $USER Weryfikacja instalacji:\nsudo docker run hello-world Uwagi Oficjalna dokumentacja:\nUbuntu/Debian Red Hat/CentOS Fedora Arch Linux Upewnij się, że Twoja dystrybucja Linuxa wspiera wymaganą wersję jądra.\nDocker jest teraz gotowy do użycia! 🚀\n","permalink":"//localhost:1313/posts/projects/docker/","summary":"\u003ch1 id=\"przewodnik-instalacji-dockera\"\u003ePrzewodnik Instalacji Dockera\u003c/h1\u003e\n\u003cp\u003eDocker to platforma konteneryzacji, która umożliwia uruchamianie aplikacji w lekkich, izolowanych środowiskach. Poniżej znajdziesz instrukcje instalacji dla różnych dystrybucji Linuxa.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"1-ubuntudebian\"\u003e1. Ubuntu/Debian\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eAktualizacja systemu\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo apt update \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e sudo apt upgrade -y\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eInstalacja wymaganych pakietów\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo apt install -y curl apt-transport-https ca-certificates software-properties-common\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eDodanie repozytorium Dockera\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecurl -fsSL https://download.docker.com/linux/ubuntu/gpg \u003cspan class=\"p\"\u003e|\u003c/span\u003e sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \u003c/span\u003e\u003cspan class=\"k\"\u003e$(\u003c/span\u003elsb_release -cs\u003cspan class=\"k\"\u003e)\u003c/span\u003e\u003cspan class=\"s2\"\u003e stable\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e sudo tee /etc/apt/sources.list.d/docker.list\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eInstalacja Dockera\u003c/strong\u003e:\u003c/p\u003e","title":"Instalacja Docker"},{"content":"Cześć! 👋 Jestem administratorem systemów Linux z doświadczeniem w zarządzaniu narzędziami CI/CD, kontenerami Docker oraz wirtualizacją (Proxmox, VMware). Posiadam także praktyczną wiedzę w zakresie platform chmurowych, takich jak AWS, Azure, GCP i Linode. Specjalizuję się w administracji serwerami Linux z rodzin Debian i Red Hat.\nMoje Umiejętności: Systemy Linux: Zarządzanie serwerami Debian i Red Hat. Wirtualizacja: Proxmox, VMware. Konteneryzacja: Docker, Kubernetes (rozwijam swoje umiejętności). Platformy Chmurowe: AWS, Azure, GCP, Linode. Narzędzia CI/CD: Ansible, Jenkins. Monitorowanie i zarządzanie infrastrukturą. Aktualne Cele: Rozwijam swoje umiejętności w Kubernetes i zaawansowanych rozwiązaniach chmurowych. Przygotowuję się do zdobycia certyfikatów: Google Cloud Professional (GCP) Red Hat Certified System Administrator (RHCSA). Dodatkowe Doświadczenie: Mam doświadczenie w zarządzaniu środowiskami Windows, w tym konfiguracją i monitorowaniem Active Directory. Moją długoterminową ambicją jest specjalizacja w utrzymaniu i zarządzaniu serwerami Linux oraz rozwoju w obszarze infrastruktury chmurowej.\nZnajdź Mnie Online: GitHub: MichalADA Dzięki za odwiedzenie mojego bloga! 🚀\n","permalink":"//localhost:1313/posts/about/","summary":"\u003ch1 id=\"cześć-\"\u003eCześć! 👋\u003c/h1\u003e\n\u003cp\u003eJestem administratorem systemów Linux z doświadczeniem w zarządzaniu narzędziami \u003cstrong\u003eCI/CD\u003c/strong\u003e, kontenerami \u003cstrong\u003eDocker\u003c/strong\u003e oraz wirtualizacją (\u003cstrong\u003eProxmox\u003c/strong\u003e, \u003cstrong\u003eVMware\u003c/strong\u003e). Posiadam także praktyczną wiedzę w zakresie platform chmurowych, takich jak \u003cstrong\u003eAWS\u003c/strong\u003e, \u003cstrong\u003eAzure\u003c/strong\u003e, \u003cstrong\u003eGCP\u003c/strong\u003e i \u003cstrong\u003eLinode\u003c/strong\u003e. Specjalizuję się w administracji serwerami Linux z rodzin \u003cstrong\u003eDebian\u003c/strong\u003e i \u003cstrong\u003eRed Hat\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"moje-umiejętności\"\u003eMoje Umiejętności:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eSystemy Linux\u003c/strong\u003e: Zarządzanie serwerami Debian i Red Hat.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eWirtualizacja\u003c/strong\u003e: Proxmox, VMware.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eKonteneryzacja\u003c/strong\u003e: Docker, Kubernetes (rozwijam swoje umiejętności).\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePlatformy Chmurowe\u003c/strong\u003e: AWS, Azure, GCP, Linode.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eNarzędzia CI/CD\u003c/strong\u003e: Ansible, Jenkins.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eMonitorowanie i zarządzanie infrastrukturą\u003c/strong\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"aktualne-cele\"\u003eAktualne Cele:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRozwijam swoje umiejętności w \u003cstrong\u003eKubernetes\u003c/strong\u003e i zaawansowanych rozwiązaniach chmurowych.\u003c/li\u003e\n\u003cli\u003ePrzygotowuję się do zdobycia certyfikatów:\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eGoogle Cloud Professional (GCP)\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eRed Hat Certified System Administrator (RHCSA)\u003c/strong\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"dodatkowe-doświadczenie\"\u003eDodatkowe Doświadczenie:\u003c/h2\u003e\n\u003cp\u003eMam doświadczenie w zarządzaniu środowiskami \u003cstrong\u003eWindows\u003c/strong\u003e, w tym konfiguracją i monitorowaniem \u003cstrong\u003eActive Directory\u003c/strong\u003e. Moją długoterminową ambicją jest specjalizacja w utrzymaniu i zarządzaniu serwerami Linux oraz rozwoju w obszarze infrastruktury chmurowej.\u003c/p\u003e","title":"O Mnie"}]